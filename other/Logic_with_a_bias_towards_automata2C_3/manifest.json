{
  "presentation": "Logic with a bias towards automata, 3",
  "slideDict": {
    "301:3": "Fixed_formula",
    "301:54": "First-order_graph_properties",
    "301:105": "Second-order_graph_properties",
    "301:144": "Courcelle_theorem",
    "102:2": "First_slide",
    "301:147": "Automata_courcelle",
    "301:176": "Tree_automata",
    "301:181": "Tree_automata_def",
    "301:268": "Fo_on_bounded_degree",
    "301:271": "Gaifman",
    "309:125": "Local_sentences",
    "301:315": "Bounded_degree_proof",
    "310:99": "Nowhere_dense",
    "310:113": "Definition_of_nowhere_dense",
    "310:283": "model_checking_nowhere_dense",
    "310:103": "twin-width",
    "310:466": "twin-width_definition",
    "318:0": "examples_of_nowhere_dense_classes",
    "318:7": "examples_of_twin-width"
  },
  "soundDict": {
    "102:2": {
      "0": {
        "file": "0",
        "duration": 7.056
      },
      "1": {
        "file": "1",
        "duration": 19.584
      },
      "2": {
        "file": "2",
        "duration": 10.944
      }
    },
    "301:3": {
      "0": {
        "file": "0",
        "duration": 1.536
      },
      "1": {
        "file": "1",
        "duration": 20.256
      },
      "2": {
        "file": "2",
        "duration": 13.296
      },
      "3": {
        "file": "3",
        "duration": 21.216
      },
      "4": {
        "file": "4",
        "duration": 16.536
      },
      "5": {
        "file": "5",
        "duration": 50.664
      },
      "6": {
        "file": "6",
        "duration": 22.344
      },
      "7": {
        "file": "7",
        "duration": 27.384
      },
      "8": {
        "file": "8",
        "duration": 46.296
      },
      "9": {
        "file": "9",
        "duration": 39.816
      },
      "10": {
        "file": "10",
        "duration": 30.936
      },
      "11": {
        "file": "11",
        "duration": 20.376
      }
    },
    "301:54": {
      "0": {
        "file": "0",
        "duration": 1.344
      },
      "1": {
        "file": "1",
        "duration": 8.136
      },
      "2": {
        "file": "2",
        "duration": 20.856
      },
      "3": {
        "file": "3",
        "duration": 37.344
      },
      "4": {
        "file": "4",
        "duration": 27.816
      },
      "5": {
        "file": "5",
        "duration": 34.176
      },
      "6": {
        "file": "6",
        "duration": 26.664
      },
      "7": {
        "file": "7",
        "duration": 39.096
      },
      "8": {
        "file": "8",
        "duration": 48.864
      }
    },
    "301:105": {
      "0": {
        "file": "0",
        "duration": 7.344
      },
      "1": {
        "file": "1",
        "duration": 7.896
      },
      "2": {
        "file": "2",
        "duration": 2.184
      },
      "3": {
        "file": "3",
        "duration": 10.824
      },
      "4": {
        "file": "4",
        "duration": 5.424
      },
      "5": {
        "file": "5",
        "duration": 45.096
      },
      "6": {
        "file": "6",
        "duration": 9.744
      },
      "7": {
        "file": "7",
        "duration": 29.856
      },
      "8": {
        "file": "8",
        "duration": 5.136
      },
      "9": {
        "file": "9",
        "duration": 38.136
      }
    },
    "301:144": {
      "0": {
        "file": "0",
        "duration": 1.704
      },
      "1": {
        "file": "1",
        "duration": 4.584
      },
      "2": {
        "file": "2",
        "duration": 31.296
      },
      "3": {
        "file": "3",
        "duration": 7.704
      },
      "4": {
        "file": "4",
        "duration": 51.624
      },
      "5": {
        "file": "5",
        "duration": 43.656
      },
      "6": {
        "file": "6",
        "duration": 3.936
      },
      "7": {
        "file": "7",
        "duration": 49.704
      }
    },
    "301:147": {
      "0": {
        "file": "0",
        "duration": 1.944
      },
      "1": {
        "file": "1",
        "duration": 4.824
      },
      "2": {
        "file": "2",
        "duration": 72.744
      },
      "3": {
        "file": "3",
        "duration": 26.736
      },
      "4": {
        "file": "4",
        "duration": 9.504
      }
    },
    "301:176": {
      "0": {
        "file": "0",
        "duration": 8.064
      },
      "1": {
        "file": "1",
        "duration": 11.616
      },
      "2": {
        "file": "2",
        "duration": 3.264
      },
      "3": {
        "file": "3",
        "duration": 26.616
      },
      "4": {
        "file": "4",
        "duration": 14.304
      }
    },
    "301:181": {
      "0": {
        "file": "0",
        "duration": 6.624
      },
      "1": {
        "file": "1",
        "duration": 4.224
      },
      "2": {
        "file": "2",
        "duration": 8.424
      },
      "3": {
        "file": "3",
        "duration": 5.856
      },
      "4": {
        "file": "4",
        "duration": 8.256
      },
      "5": {
        "file": "5",
        "duration": 4.536
      },
      "6": {
        "file": "6",
        "duration": 36.696
      },
      "7": {
        "file": "7",
        "duration": 5.736
      },
      "8": {
        "file": "8",
        "duration": 0.984
      },
      "9": {
        "file": "9",
        "duration": 0.384
      },
      "10": {
        "file": "10",
        "duration": 0.576
      },
      "11": {
        "file": "11",
        "duration": 21.624
      },
      "12": {
        "file": "12",
        "duration": 32.496
      },
      "13": {
        "file": "13",
        "duration": 2.304
      }
    },
    "301:268": {
      "0": {
        "file": "0",
        "duration": 0.216
      },
      "1": {
        "file": "1",
        "duration": 18.336
      },
      "2": {
        "file": "2",
        "duration": 13.464
      },
      "3": {
        "file": "3",
        "duration": 2.184
      },
      "4": {
        "file": "4",
        "duration": 40.704
      },
      "5": {
        "file": "5",
        "duration": 17.064
      },
      "6": {
        "file": "6",
        "duration": 12.744
      },
      "7": {
        "file": "7",
        "duration": 11.784
      },
      "8": {
        "file": "8",
        "duration": 9.456
      },
      "9": {
        "file": "9",
        "duration": 49.776
      }
    },
    "301:271": {
      "0": {
        "file": "0",
        "duration": 1.536
      },
      "1": {
        "file": "1",
        "duration": 11.784
      },
      "2": {
        "file": "2",
        "duration": 4.416
      },
      "3": {
        "file": "3",
        "duration": 5.304
      },
      "4": {
        "file": "4",
        "duration": 8.256
      },
      "5": {
        "file": "5",
        "duration": 18.696
      },
      "6": {
        "file": "6",
        "duration": 13.776
      },
      "7": {
        "file": "7",
        "duration": 22.536
      }
    },
    "309:125": {
      "0": {
        "file": "0",
        "duration": 3.096
      },
      "1": {
        "file": "1",
        "duration": 9.744
      },
      "2": {
        "file": "2",
        "duration": 17.304
      },
      "3": {
        "file": "3",
        "duration": 23.016
      },
      "4": {
        "file": "4",
        "duration": 33.144
      }
    },
    "301:315": {
      "0": {
        "file": "0",
        "duration": 1.536
      },
      "1": {
        "file": "1",
        "duration": 23.064
      },
      "2": {
        "file": "2",
        "duration": 76.416
      },
      "3": {
        "file": "3",
        "duration": 16.416
      },
      "4": {
        "file": "4",
        "duration": 16.584
      },
      "5": {
        "file": "5",
        "duration": 23.136
      },
      "6": {
        "file": "6",
        "duration": 19.704
      },
      "7": {
        "file": "7",
        "duration": 18.336
      },
      "8": {
        "file": "8",
        "duration": 43.704
      },
      "9": {
        "file": "9",
        "duration": 29.184
      },
      "10": {
        "file": "10",
        "duration": 25.584
      }
    },
    "310:99": {
      "0": {
        "file": "0",
        "duration": 3.816
      },
      "1": {
        "file": "1",
        "duration": 1.176
      },
      "2": {
        "file": "2",
        "duration": 2.904
      },
      "3": {
        "file": "3",
        "duration": 5.496
      },
      "4": {
        "file": "4",
        "duration": 20.424
      },
      "5": {
        "file": "5",
        "duration": 6.984
      },
      "6": {
        "file": "6",
        "duration": 12.456
      },
      "7": {
        "file": "7",
        "duration": 26.184
      },
      "8": {
        "file": "8",
        "duration": 15.864
      },
      "9": {
        "file": "9",
        "duration": 16.896
      },
      "10": {
        "file": "10",
        "duration": 2.976
      }
    },
    "310:113": {
      "0": {
        "file": "0",
        "duration": 6.384
      },
      "1": {
        "file": "1",
        "duration": 9.744
      },
      "2": {
        "file": "2",
        "duration": 8.616
      },
      "3": {
        "file": "3",
        "duration": 2.496
      },
      "4": {
        "file": "4",
        "duration": 11.544
      },
      "5": {
        "file": "5",
        "duration": 6.624
      },
      "6": {
        "file": "6",
        "duration": 15.504
      },
      "7": {
        "file": "7",
        "duration": 79.824
      },
      "8": {
        "file": "8",
        "duration": 31.584
      },
      "9": {
        "file": "9",
        "duration": 10.584
      }
    },
    "318:0": {
      "0": {
        "file": "0",
        "duration": 8.664
      },
      "1": {
        "file": "1",
        "duration": 40.944
      },
      "2": {
        "file": "2",
        "duration": 41.424
      }
    },
    "310:283": {
      "0": {
        "file": "0",
        "duration": 0.336
      },
      "1": {
        "file": "1",
        "duration": 6.216
      },
      "2": {
        "file": "2",
        "duration": 82.944
      },
      "3": {
        "file": "3",
        "duration": 43.584
      },
      "4": {
        "file": "4",
        "duration": 67.776
      },
      "5": {
        "file": "5",
        "duration": 56.064
      }
    },
    "310:103": {
      "0": {
        "file": "0",
        "duration": 1.536
      },
      "1": {
        "file": "1",
        "duration": 1.704
      },
      "2": {
        "file": "2",
        "duration": 12.216
      },
      "3": {
        "file": "3",
        "duration": 32.184
      },
      "4": {
        "file": "4",
        "duration": 37.056
      },
      "5": {
        "file": "5",
        "duration": 19.704
      },
      "6": {
        "file": "6",
        "duration": 33.384
      },
      "7": {
        "file": "7",
        "duration": 17.424
      },
      "8": {
        "file": "8",
        "duration": 2.544
      },
      "9": {
        "file": "9",
        "duration": 56.256
      }
    },
    "310:466": {
      "0": {
        "file": "0",
        "duration": 2.184
      },
      "1": {
        "file": "1",
        "duration": 6.576
      },
      "2": {
        "file": "2",
        "duration": 7.704
      },
      "3": {
        "file": "3",
        "duration": 6.576
      },
      "4": {
        "file": "4",
        "duration": 13.704
      },
      "5": {
        "file": "5",
        "duration": 11.544
      },
      "6": {
        "file": "6",
        "duration": 10.584
      },
      "7": {
        "file": "7",
        "duration": 19.944
      },
      "8": {
        "file": "8",
        "duration": 13.944
      },
      "9": {
        "file": "9",
        "duration": 7.656
      },
      "10": {
        "file": "10",
        "duration": 54.576
      },
      "11": {
        "file": "11",
        "duration": 7.584
      }
    },
    "318:7": {
      "0": {
        "file": "0",
        "duration": 1.296
      },
      "1": {
        "file": "1",
        "duration": 5.064
      },
      "2": {
        "file": "2",
        "duration": 6.696
      },
      "3": {
        "file": "3",
        "duration": 12.984
      },
      "4": {
        "file": "4",
        "duration": 17.496
      },
      "5": {
        "file": "5",
        "duration": 1.056
      },
      "6": {
        "file": "6",
        "duration": 0.864
      },
      "7": {
        "file": "7",
        "duration": 1.056
      },
      "8": {
        "file": "8",
        "duration": 22.104
      },
      "9": {
        "file": "9",
        "duration": 35.424
      },
      "10": {
        "file": "10",
        "duration": 64.656
      }
    }
  },
  "tree": {
    "type": "child",
    "name": "First slide",
    "id": "102:2",
    "children": [
      {
        "type": "show",
        "id": "301:2",
        "name": "Rectangle 1",
        "disabled": false
      },
      {
        "type": "child",
        "name": "Fixed formula",
        "id": "301:3",
        "children": [
          {
            "type": "show",
            "id": "301:5",
            "name": "Many classical algorithmic problems can be formalized in logic",
            "disabled": false
          },
          {
            "type": "child",
            "name": "First-order graph properties",
            "id": "301:54",
            "children": [
              {
                "type": "show",
                "id": "301:56",
                "name": "First-order logic",
                "disabled": false
              },
              {
                "type": "show",
                "id": "311:12",
                "name": "Independent set of size k:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "311:13",
                "name": "Dominating set of size k:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "317:127",
                "name": "Maybe for every first-order sentence φ, there is a linear time algorithm which recognizes graphs where φ is true?",
                "disabled": false
              },
              {
                "type": "show",
                "id": "317:128",
                "name": "The naive algorithm is polynomial, but the degree of the polynomial depends on φ.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "317:123",
                "name": "Can be solved in linear time for every k:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "317:124",
                "name": "2k O(graph size)",
                "disabled": false
              },
              {
                "type": "show",
                "id": "317:129",
                "name": "Conjecture: cannot be solved in time",
                "disabled": false
              }
            ]
          },
          {
            "type": "child",
            "name": "Second-order graph properties",
            "id": "301:105",
            "children": [
              {
                "type": "show",
                "id": "301:107",
                "name": "Monadic second-order logic",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:109",
                "name": "3-colourability",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:133",
                "name": "There exist 3 sets of vertices, such that:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:129",
                "name": "b. no edge has both endpoints in the same set",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:134",
                "name": "a. every vertex belongs to some set",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:130",
                "name": "Hamiltonian path",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:131",
                "name": "There exists a set F of edges such that:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:135",
                "name": "a. every vertex is incident to exactly two edges from F",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:136",
                "name": "b. for every proper subset G ⊆ F, some vertex is incident to exactly 1 edge from G",
                "disabled": false
              }
            ]
          },
          {
            "type": "show",
            "id": "301:137",
            "name": "Hence the value of theorems such as these:",
            "disabled": false
          },
          {
            "type": "show",
            "id": "301:138",
            "name": "Theorem. [Seese 1996] For every sentence φ of first-order logic and d ∈ {1, 2, ..}, the following problem can be solved in linear time: input: graph of degree d question: does it satisfy φ?",
            "disabled": false
          },
          {
            "type": "show",
            "id": "301:141",
            "name": "Corollary. For every k and d, there is a linear time algorithm for dominating set of size k on graphs of degree at most d.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "301:140",
            "name": "Theorem. [Courcelle 1990] For every sentence φ of MSO and k ∈ {1, 2, ..}, the following problem can be solved in linear time: input: graph of treewidth k question: does it satisfy φ?",
            "disabled": false
          },
          {
            "type": "show",
            "id": "301:142",
            "name": "Corollary. For every k, there is a linear time algorithm for Hamiltonian path on graphs of treewidth at most k.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "301:143",
            "name": "Algorithmic meta-theorems",
            "disabled": false
          },
          {
            "type": "child",
            "name": "Courcelle theorem",
            "id": "301:144",
            "children": [
              {
                "type": "show",
                "id": "301:149",
                "name": "Follows immediately from these two results:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:150",
                "name": "Theorem. [Bodlaender] For every k ∈ {1, 2, ...}, the following problem can be solved in linear time: input: a graph output: a tree decomposition of width k, or “no” if there is no such tree decomposition.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:152",
                "name": "A hard algorithm.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:153",
                "name": "Robertson and Seymour give a simple cubic algorithm.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "301:151",
                "name": "Lemma. For every k ∈ {1, 2, ...} and MSO sentence φ, the following problem can be solved in linear time: input: a tree decomposition of width k output: does the underlying graph satisfy φ?",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Automata courcelle",
                "id": "301:147",
                "children": [
                  {
                    "type": "show",
                    "id": "301:173",
                    "name": "An MSO formula can be evaluated directly on a tree decomposition:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "301:158",
                    "name": "width k tree decompositions",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:5",
                    "name": "Therefore it remains to show that a fixed MSO formula on trees can be evaluated in linear time: f (formula)·(size of tree)",
                    "disabled": false
                  },
                  {
                    "type": "child",
                    "name": "Tree automata",
                    "id": "301:176",
                    "children": [
                      {
                        "type": "show",
                        "id": "301:178",
                        "name": "Theorem. Thatcher and Wright 1968] For finite trees, MSO and tree automata define the same languages.",
                        "disabled": false
                      },
                      {
                        "type": "child",
                        "name": "Tree automata def",
                        "id": "301:181",
                        "children": [
                          {
                            "type": "show",
                            "id": "301:183",
                            "name": "Formally, we consider finite trees over a ranked alphabet:",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "311:7",
                            "name": "c",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:204",
                            "name": "a is a letter of rank 2",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:205",
                            "name": "b is a letter of rank 1",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:206",
                            "name": "c is a letter of rank 0",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "311:11",
                            "name": "A deterministic bottom-up automaton assigns to each tree node a state, using a transition function",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "311:9",
                            "name": "p",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "311:10",
                            "name": "p",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:213",
                            "name": "r",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:214",
                            "name": "q",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:216",
                            "name": "p",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:265",
                            "name": "Languages recognized by these automata are closed under union, complementation and projection.",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "301:266",
                            "name": "because there nondeterministic bottom-up tree automata are equivalent to deterministic ones",
                            "disabled": false
                          }
                        ]
                      },
                      {
                        "type": "show",
                        "id": "301:180",
                        "name": "Proof. Same as for finite words (Büchi, Elgot, Trakhtenbrot)",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "301:267",
                        "name": "Since deterministic bottom-up tree automata can be evaluated in linear time, the result follows.",
                        "disabled": false
                      }
                    ]
                  }
                ]
              },
              {
                "type": "show",
                "id": "301:155",
                "name": "A variant of this theorem is true for rankwidth (aka cliquewidth)",
                "disabled": false
              }
            ]
          },
          {
            "type": "child",
            "name": "Fo on bounded degree",
            "id": "301:268",
            "children": [
              {
                "type": "show",
                "id": "301:270",
                "name": "The main tool for this, and other similar results, is Gaifman’s theorem about the locality of first-order logic",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Gaifman",
                "id": "301:271",
                "children": [
                  {
                    "type": "show",
                    "id": "301:273",
                    "name": "Theorem. [Gaifman 1982] Every sentence φ of first-order logic on graphs is equivalent to a Boolean combination of basic local sentences:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:17",
                    "name": "a basic local sentence",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:14",
                    "name": "a number k ∈ {0, 1, ...}",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:15",
                    "name": "a number r ∈ {0, 1, ...} called the radius",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:16",
                    "name": "a first-order formula φ(x) which is r-local",
                    "disabled": false
                  },
                  {
                    "type": "child",
                    "name": "Local sentences",
                    "id": "309:125",
                    "children": [
                      {
                        "type": "show",
                        "id": "309:129",
                        "name": "Group 2",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:20",
                        "name": "The r-neighbourhood of a vertex v in a graph is the vertices that can be reached from v using at most r edges",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:19",
                        "name": "A formula φ(v) is r-local if it depends only on the r-neighbourhood of v:",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "309:254",
                        "name": "A syntactic characterization: all quantifiers are relativized to the r-neighbourhood of v.",
                        "disabled": false
                      }
                    ]
                  },
                  {
                    "type": "show",
                    "id": "310:38",
                    "name": "The theorem is effective, although with non-elementary complexity.",
                    "disabled": false
                  }
                ]
              },
              {
                "type": "show",
                "id": "301:317",
                "name": "Proof.",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Bounded degree proof",
                "id": "301:315",
                "children": [
                  {
                    "type": "show",
                    "id": "311:21",
                    "name": "Thanks to Gaifman’s theorem, it is enough to show that for every basic local sentence",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:22",
                    "name": "For every vertex x, we can check φ(x) in constant time.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:82",
                    "name": "Algorithm for k = 2.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:83",
                    "name": "For every vertex x₁, check if it satisfies φ(x₁)",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:84",
                    "name": "After finding the first candidate for x₁, find some other x₂ which satisfies φ(x₂) and has distance > r from x₁",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:85",
                    "name": "This greedy algorithm can give a false negative.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:25",
                    "name": "vertex x₁ found by algorithm",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "311:24",
                    "name": "vertices x₁ and x₂ needed to satisfy basic local sentence",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:94",
                    "name": "The false negative can only happen if the basic local sentence is witnessed by a pair of vertices at distance ≤ 2r.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:96",
                    "name": "Such pairs can be found in linear time.",
                    "disabled": false
                  }
                ]
              },
              {
                "type": "show",
                "id": "310:98",
                "name": "There are far-reaching generalizations of this result, beyond bounded degree.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "311:30",
                "name": "nowhere dense",
                "disabled": false
              },
              {
                "type": "show",
                "id": "311:31",
                "name": "twinwidth",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Nowhere dense",
                "id": "310:99",
                "children": [
                  {
                    "type": "show",
                    "id": "311:4",
                    "name": "Nowhere dense classes",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:110",
                    "name": "Let C be any of the following graph classes:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:106",
                    "name": "graphs of degree at most 5",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:107",
                    "name": "graphs of treewidth at most 5",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:108",
                    "name": "planar graphs",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:109",
                    "name": "graphs that avoid the 5-clique as a minor",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:105",
                    "name": "For every first-order sentence φ, there is a linear time algorithm for: input: a graph from C question: does it satisfy φ?",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:111",
                    "name": "All of the above are examples of nowhere dense graph classes.",
                    "disabled": false
                  },
                  {
                    "type": "child",
                    "name": "Definition of nowhere dense",
                    "id": "310:113",
                    "children": [
                      {
                        "type": "show",
                        "id": "310:277",
                        "name": "Consider a radius r ∈ {0, 1, ...} and two graphs:",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:27",
                        "name": "H",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:28",
                        "name": "G",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:236",
                        "name": "We say that H is an r-minor of G if one can associate to each vertex of H a subset of vertices in G such that:",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:29",
                        "name": "Group 12",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:237",
                        "name": "1. all subsets are pairwise disjoint and have radius at most r",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:238",
                        "name": "2. if two vertices in H are connected by an edge, then the same is true for the associated subsets in G",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:240",
                        "name": "Definition. [Nesetril and Ossona de Mendez 2011] A class of graphs C is nowhere dense if for every radius r ∈ {0, 1, ...}, not all graphs are r-minors of C.",
                        "disabled": false
                      },
                      {
                        "type": "child",
                        "name": "examples of nowhere dense classes",
                        "id": "318:0",
                        "children": [
                          {
                            "type": "show",
                            "id": "318:2",
                            "name": "Example 1. If C has bounded degree, then it is nowhere dense. An r-minor of a graph with degree at most d has degree at most dr +1",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:3",
                            "name": "Example 2. If C has bounded treewidth, then it is nowhere dense. An r-minor of a graph of treewidth k cannot be a (k+1)-clique",
                            "disabled": false
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "child",
                    "name": "model checking nowhere dense",
                    "id": "310:283",
                    "children": [
                      {
                        "type": "show",
                        "id": "310:302",
                        "name": "Nowhere dense: model checking almost linear",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:26",
                        "name": "Theorem. [Grohe, Kreutzer, Siebertz 2014] If C is nowhere dense and closed under subgraphs, then for every first-order sentence φ, the model checking problem",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "318:6",
                        "name": "Not nowhere dense: model checking hard",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:281",
                        "name": "If C is not nowhere dense, then for some radius r ∈ {1, 2, ...} the class every graph as an r-minor.",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:288",
                        "name": "A first-order formula can interpret an r-minor in the bigger graph, and hence, model checking on C is a hard as model checking on the class of all graphs.",
                        "disabled": false
                      }
                    ]
                  }
                ]
              },
              {
                "type": "child",
                "name": "twin-width",
                "id": "310:103",
                "children": [
                  {
                    "type": "show",
                    "id": "311:3",
                    "name": "Bounded twinwidth",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:468",
                    "name": "First-order model checking is linear time on graph classes such as:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:469",
                    "name": "complements of planar graphs",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:471",
                    "name": "complements of graphs of treewidth at most 5",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:470",
                    "name": "graphs of cliquewidth at most 5",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:472",
                    "name": "These classes are not nowhere dense (and not closed under subgraphs).",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "310:473",
                    "name": "These are class of bounded twinwidth.",
                    "disabled": false
                  },
                  {
                    "type": "child",
                    "name": "twin-width definition",
                    "id": "310:466",
                    "children": [
                      {
                        "type": "show",
                        "id": "310:454",
                        "name": "Consider a graph, with a partition of its vertices",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "311:34",
                        "name": "A",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:464",
                        "name": "Two blocks are consistent if they are connected in the same way:",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:457",
                        "name": "Blocks A and B are consistent, because ∀a ∈ A ∀b ∈ B edge(a, b)",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:462",
                        "name": "Blocks B and C are consistent, because ∀b ∈ B ∀c ∈ C ¬ edge(b, c)",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:463",
                        "name": "Blocks A and C are inconsistent",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:458",
                        "name": "Definition [Bonnet, Kim, Thomassé, Watrigant 2020] A graph has twinwidth k ∈ {0, 1, 2, ...} if there is a sequence of partitions P1, ..., Pn on its vertices such that;",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:459",
                        "name": "a) P1 has singleton blocks, Pn partition has one block",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:460",
                        "name": "b) for every i ∈ {1, ..., n – 1}, Pi+1 is obtained from Pi by merging two blocks",
                        "disabled": false
                      },
                      {
                        "type": "show",
                        "id": "310:465",
                        "name": "c) for every i ∈ {1, ..., n} and every block A ∈ Pi, at most k blocks of Pi are inconsistent with A.",
                        "disabled": false
                      },
                      {
                        "type": "child",
                        "name": "examples of twin-width",
                        "id": "318:7",
                        "children": [
                          {
                            "type": "show",
                            "id": "318:9",
                            "name": "Example 1. Every clique has twinwidth 1.",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:58",
                            "name": "Group 13",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:65",
                            "name": "Group 14",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:66",
                            "name": "Rectangle 2",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:67",
                            "name": "Rectangle 3",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:68",
                            "name": "Rectangle 4",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:69",
                            "name": "Rectangle 5",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:70",
                            "name": "Rectangle 6",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:71",
                            "name": "Example 2. If a graph has twinwidth k, then the same is true for its complement.",
                            "disabled": false
                          },
                          {
                            "type": "show",
                            "id": "318:78",
                            "name": "bounded cliquewidth",
                            "disabled": false
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "show",
                    "id": "311:33",
                    "name": "Theorem. [Bonnet, Kim, Thomassé, Watrigant 2020] For every k ∈ {0, 1, 2, ...} and first-order φ, there is a linear time algorithm for:",
                    "disabled": false
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "version": 0.82
}