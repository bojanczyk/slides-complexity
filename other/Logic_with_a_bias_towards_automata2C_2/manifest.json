{
  "presentation": "Logic with a bias towards automata, 2",
  "slideDict": {
    "102:2": "First_slide",
    "136:0": "Satisfiability",
    "136:4": "Entsheidungsproblem",
    "136:16": "Finite_words",
    "136:43": "From_automata_to_mso",
    "136:90": "Monoids",
    "137:6": "Monoid_advertising",
    "137:15": "Beyond_finite_words",
    "136:18": "Treelike_graphs",
    "140:66": "Grids_and_treelike",
    "140:156": "Treewidth_definition",
    "140:299": "A_tree_decomposition",
    "140:499": "Courcelle_Seese",
    "140:505": "Courcelle_proof",
    "140:728": "Restricted_syntax",
    "176:2": "monoids_to_automata",
    "176:49": "automata_to_monoids"
  },
  "soundDict": {
    "102:2": {
      "0": {
        "file": "0",
        "duration": 28.224
      },
      "1": {
        "file": "1",
        "duration": 9.384
      },
      "2": {
        "file": "2",
        "duration": 46.464
      }
    },
    "136:0": {
      "0": {
        "file": "0",
        "duration": 5.664
      },
      "1": {
        "file": "1",
        "duration": 3.576
      },
      "2": {
        "file": "2",
        "duration": 4.944
      },
      "3": {
        "file": "3",
        "duration": 31.776
      },
      "4": {
        "file": "4",
        "duration": 4.704
      },
      "5": {
        "file": "5",
        "duration": 13.536
      },
      "6": {
        "file": "6",
        "duration": 22.176
      },
      "7": {
        "file": "7",
        "duration": 14.664
      },
      "8": {
        "file": "8",
        "duration": 17.976
      },
      "9": {
        "file": "9",
        "duration": 23.016
      },
      "10": {
        "file": "10",
        "duration": 37.584
      },
      "11": {
        "file": "11",
        "duration": 17.064
      }
    },
    "136:4": {
      "0": {
        "file": "0",
        "duration": 2.256
      },
      "1": {
        "file": "1",
        "duration": 19.296
      },
      "2": {
        "file": "2",
        "duration": 4.056
      },
      "3": {
        "file": "3",
        "duration": 14.784
      },
      "4": {
        "file": "4",
        "duration": 11.136
      },
      "5": {
        "file": "5",
        "duration": 34.704
      },
      "6": {
        "file": "6",
        "duration": 77.976
      },
      "7": {
        "file": "7",
        "duration": 67.056
      },
      "8": {
        "file": "8",
        "duration": 17.736
      }
    },
    "136:16": {
      "0": {
        "file": "0",
        "duration": 2.856
      },
      "1": {
        "file": "1",
        "duration": 32.376
      },
      "2": {
        "file": "2",
        "duration": 48.624
      },
      "3": {
        "file": "3",
        "duration": 34.896
      },
      "4": {
        "file": "4",
        "duration": 27.144
      },
      "5": {
        "file": "5",
        "duration": 15.696
      },
      "6": {
        "file": "6",
        "duration": 13.536
      },
      "7": {
        "file": "7",
        "duration": 15.096
      },
      "8": {
        "file": "8",
        "duration": 36.264
      },
      "9": {
        "file": "9",
        "duration": 17.544
      },
      "10": {
        "file": "10",
        "duration": 18.456
      },
      "11": {
        "file": "11",
        "duration": 12.504
      }
    },
    "136:43": {
      "0": {
        "file": "0",
        "duration": 1.944
      },
      "1": {
        "file": "1",
        "duration": 6.504
      },
      "2": {
        "file": "2",
        "duration": 16.416
      },
      "3": {
        "file": "3",
        "duration": 2.256
      },
      "4": {
        "file": "4",
        "duration": 8.064
      },
      "5": {
        "file": "5",
        "duration": 25.104
      },
      "6": {
        "file": "6",
        "duration": 29.064
      },
      "7": {
        "file": "7",
        "duration": 26.256
      },
      "8": {
        "file": "8",
        "duration": 33.336
      }
    },
    "137:15": {
      "0": {
        "file": "0",
        "duration": 4.584
      },
      "1": {
        "file": "1",
        "duration": 31.776
      },
      "2": {
        "file": "2",
        "duration": 31.704
      },
      "3": {
        "file": "3",
        "duration": 68.904
      },
      "4": {
        "file": "4",
        "duration": 55.464
      }
    },
    "136:90": {
      "0": {
        "file": "0",
        "duration": 0.816
      },
      "1": {
        "file": "1",
        "duration": 41.064
      },
      "2": {
        "file": "2",
        "duration": 84.336
      },
      "3": {
        "file": "3",
        "duration": 18.864
      },
      "4": {
        "file": "4",
        "duration": 10.656
      },
      "5": {
        "file": "5",
        "duration": 4.224
      }
    },
    "176:2": {
      "0": {
        "file": "0",
        "duration": 3.816
      },
      "1": {
        "file": "1",
        "duration": 4.824
      },
      "2": {
        "file": "2",
        "duration": 33.096
      },
      "3": {
        "file": "3",
        "duration": 7.704
      },
      "4": {
        "file": "4",
        "duration": 2.616
      },
      "5": {
        "file": "5",
        "duration": 2.976
      },
      "6": {
        "file": "6",
        "duration": 10.776
      },
      "7": {
        "file": "7",
        "duration": 22.704
      },
      "8": {
        "file": "8",
        "duration": 86.664
      }
    },
    "176:49": {
      "0": {
        "file": "0",
        "duration": 2.616
      },
      "1": {
        "file": "1",
        "duration": 5.184
      },
      "2": {
        "file": "2",
        "duration": 47.136
      },
      "3": {
        "file": "3",
        "duration": 9.576
      },
      "4": {
        "file": "4",
        "duration": 13.704
      },
      "5": {
        "file": "5",
        "duration": 19.296
      }
    },
    "137:6": {
      "0": {
        "file": "0",
        "duration": 1.464
      },
      "1": {
        "file": "1",
        "duration": 23.016
      },
      "2": {
        "file": "2",
        "duration": 49.056
      },
      "3": {
        "file": "3",
        "duration": 22.056
      },
      "4": {
        "file": "4",
        "duration": 74.376
      },
      "5": {
        "file": "5",
        "duration": 76.104
      },
      "6": {
        "file": "6",
        "duration": 116.544
      }
    },
    "136:18": {
      "0": {
        "file": "0",
        "duration": 1.656
      },
      "1": {
        "file": "1",
        "duration": 34.944
      },
      "2": {
        "file": "2",
        "duration": 18.816
      },
      "3": {
        "file": "3",
        "duration": 18.744
      },
      "4": {
        "file": "4",
        "duration": 53.256
      },
      "5": {
        "file": "5",
        "duration": 6.456
      },
      "6": {
        "file": "6",
        "duration": 68.184
      }
    },
    "140:66": {
      "0": {
        "file": "0",
        "duration": 1.344
      },
      "1": {
        "file": "1",
        "duration": 35.424
      },
      "2": {
        "file": "2",
        "duration": 36.936
      },
      "3": {
        "file": "3",
        "duration": 22.536
      }
    },
    "140:156": {
      "0": {
        "file": "0",
        "duration": 16.224
      },
      "1": {
        "file": "1",
        "duration": 18.816
      },
      "2": {
        "file": "2",
        "duration": 11.496
      },
      "3": {
        "file": "3",
        "duration": 29.904
      },
      "4": {
        "file": "4",
        "duration": 2.736
      },
      "5": {
        "file": "5",
        "duration": 20.256
      },
      "6": {
        "file": "6",
        "duration": 13.296
      },
      "7": {
        "file": "7",
        "duration": 15.336
      },
      "8": {
        "file": "8",
        "duration": 13.704
      },
      "9": {
        "file": "9",
        "duration": 59.616
      },
      "10": {
        "file": "10",
        "duration": 21.144
      }
    },
    "140:299": {
      "0": {
        "file": "0",
        "duration": 4.464
      },
      "1": {
        "file": "1",
        "duration": 10.536
      },
      "2": {
        "file": "2",
        "duration": 8.784
      },
      "3": {
        "file": "3",
        "duration": 8.496
      },
      "4": {
        "file": "4",
        "duration": 9.456
      },
      "5": {
        "file": "5",
        "duration": 18.264
      },
      "6": {
        "file": "6",
        "duration": 14.424
      },
      "7": {
        "file": "7",
        "duration": 2.856
      },
      "8": {
        "file": "8",
        "duration": 4.224
      },
      "9": {
        "file": "9",
        "duration": 8.016
      },
      "10": {
        "file": "10",
        "duration": 3.864
      },
      "11": {
        "file": "11",
        "duration": 3.336
      },
      "12": {
        "file": "12",
        "duration": 6.264
      },
      "13": {
        "file": "13",
        "duration": 10.344
      }
    },
    "140:499": {
      "0": {
        "file": "0",
        "duration": 1.296
      },
      "1": {
        "file": "1",
        "duration": 21.936
      },
      "2": {
        "file": "2",
        "duration": 20.856
      },
      "3": {
        "file": "3",
        "duration": 62.424
      },
      "4": {
        "file": "4",
        "duration": 53.976
      },
      "5": {
        "file": "5",
        "duration": 32.736
      }
    },
    "140:505": {
      "0": {
        "file": "0",
        "duration": 2.424
      },
      "1": {
        "file": "1",
        "duration": 44.184
      },
      "2": {
        "file": "2",
        "duration": 8.784
      },
      "3": {
        "file": "3",
        "duration": 56.424
      },
      "4": {
        "file": "4",
        "duration": 36.984
      }
    },
    "140:728": {
      "0": {
        "file": "0",
        "duration": 3.024
      },
      "1": {
        "file": "1",
        "duration": 40.104
      },
      "2": {
        "file": "2",
        "duration": 58.824
      },
      "3": {
        "file": "3",
        "duration": 71.784
      },
      "4": {
        "file": "4",
        "duration": 60.336
      },
      "5": {
        "file": "5",
        "duration": 49.656
      },
      "6": {
        "file": "6",
        "duration": 87.864
      }
    }
  },
  "tree": {
    "type": "child",
    "name": "First slide",
    "id": "102:2",
    "children": [
      {
        "type": "show",
        "id": "140:748",
        "name": "lecture 3",
        "disabled": false,
        "keywords": [
          "lecture 3"
        ],
        "children": []
      },
      {
        "type": "child",
        "name": "Satisfiability",
        "id": "136:0",
        "children": [
          {
            "type": "show",
            "id": "136:3",
            "name": "which models?",
            "disabled": false,
            "keywords": [
              "which models?"
            ],
            "children": []
          },
          {
            "type": "show",
            "id": "136:2",
            "name": "what logic?",
            "disabled": false,
            "keywords": [
              "what logic?"
            ],
            "children": []
          },
          {
            "type": "show",
            "id": "136:9",
            "name": "All models and first-order logic: Entscheidungsproblem",
            "disabled": false,
            "keywords": [
              "All models and first-order logic: Entscheidungsproblem"
            ],
            "children": []
          },
          {
            "type": "child",
            "name": "Entsheidungsproblem",
            "id": "136:4",
            "children": [
              {
                "type": "show",
                "id": "138:164",
                "name": "Group 16",
                "disabled": false,
                "keywords": [
                  "Group 16"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "136:7",
                "name": "Decide if a sentence of first-order logic is true [Hilbert & Ackermann 1928]",
                "disabled": false,
                "keywords": [
                  "Decide if a sentence of first-order logic is true [Hilbert & Ackermann 1928]"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "138:166",
                "name": "The Entscheidungsproblem is undecidable [Church 1936, Turing 1936]",
                "disabled": false,
                "keywords": [
                  "The Entscheidungsproblem is undecidable [Church 1936, Turing 1936]"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "138:155",
                "name": "A. true means “true in all models, including infinite ones”",
                "disabled": false,
                "keywords": [
                  "A. true means “true in all models, including infinite ones”"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "138:156",
                "name": "B. true means “true in all finite models” [Trakhtenbrot 1950]",
                "disabled": false,
                "keywords": [
                  "B. true means “true in all finite models” [Trakhtenbrot 1950]"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:751",
                "name": "p",
                "disabled": false,
                "keywords": [
                  "p"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "138:154",
                "name": "Therefore, φ is true in some finite model if and only if the machine halts.",
                "disabled": false,
                "keywords": [
                  "Therefore, φ is true in some finite model if and only if the machine halts."
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "138:157",
                "name": "Similar to B.",
                "disabled": false,
                "keywords": [
                  "Similar to B."
                ],
                "children": []
              }
            ],
            "keywords": [
              "Entsheidungsproblem"
            ]
          },
          {
            "type": "show",
            "id": "140:749",
            "name": "axis 1: restrict the models",
            "disabled": false,
            "keywords": [
              "axis 1: restrict the models"
            ],
            "children": []
          },
          {
            "type": "show",
            "id": "140:750",
            "name": "axis 2: restrict the logic",
            "disabled": false,
            "keywords": [
              "axis 2: restrict the logic"
            ],
            "children": []
          },
          {
            "type": "show",
            "id": "136:10",
            "name": "Words and trees",
            "disabled": false,
            "keywords": [
              "Words and trees"
            ],
            "children": []
          },
          {
            "type": "child",
            "name": "Finite words",
            "id": "136:16",
            "children": [
              {
                "type": "show",
                "id": "140:763",
                "name": "A finite word w ∈ Σ* can be viewed as a model",
                "disabled": false,
                "keywords": [
                  "A finite word w ∈ Σ* can be viewed as a model"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:764",
                "name": "With such models, we can use logic to define languages of finite words.",
                "disabled": false,
                "keywords": [
                  "With such models, we can use logic to define languages of finite words."
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:765",
                "name": "For a language L ⊆ Σ*, the following conditions are equivalent:",
                "disabled": false,
                "keywords": [
                  "For a language L ⊆ Σ*, the following conditions are equivalent:"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:766",
                "name": "because regular languages are closed under ∨ ∧ ¬ ∃",
                "disabled": false,
                "keywords": [
                  "because regular languages are closed under ∨ ∧ ¬ ∃"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "136:40",
                "name": "Arrow 7",
                "disabled": false,
                "keywords": [
                  "Arrow 7"
                ],
                "children": []
              },
              {
                "type": "child",
                "name": "From automata to mso",
                "id": "136:43",
                "children": [
                  {
                    "type": "show",
                    "id": "136:46",
                    "name": "Every regular language L ⊆ Σ* can be defined in MSO.",
                    "disabled": false,
                    "keywords": [
                      "Every regular language L ⊆ Σ* can be defined in MSO."
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "136:85",
                    "name": "Suppose that L is recognized by an automaton with n transitions.",
                    "disabled": false,
                    "keywords": [
                      "Suppose that L is recognized by an automaton with n transitions."
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "136:86",
                    "name": "The following MSO formula describes words that have an accepting run:",
                    "disabled": false,
                    "keywords": [
                      "The following MSO formula describes words that have an accepting run:"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:771",
                    "name": "∃X1 ... ∃Xn",
                    "disabled": false,
                    "keywords": [
                      "∃X1 ... ∃Xn"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:772",
                    "name": "∀x x ∈ Xi ∧ x ∉ Xj",
                    "disabled": false,
                    "keywords": [
                      "∀x x ∈ Xi ∧ x ∉ Xj"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:773",
                    "name": "∀x first(x) ⟹ x ∈ Xi",
                    "disabled": false,
                    "keywords": [
                      "∀x first(x) ⟹ x ∈ Xi"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:774",
                    "name": "∀x ∀y (x + 1 = y) ⟹ x ∈ Xi ∧ y ∈ Xj",
                    "disabled": false,
                    "keywords": [
                      "∀x ∀y (x + 1 = y) ⟹ x ∈ Xi ∧ y ∈ Xj"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:775",
                    "name": "∀x last(x) ⟹ x ∈ Xi",
                    "disabled": false,
                    "keywords": [
                      "∀x last(x) ⟹ x ∈ Xi"
                    ],
                    "children": []
                  }
                ],
                "keywords": [
                  "From automata to mso"
                ]
              },
              {
                "type": "show",
                "id": "137:14",
                "name": "Theorem. [Büchi, Elgot, Trakhtenbrot 1958] The following problem is decidable: input: MSO sentence using x < y and {a(x)}a ∈ Σ question: is it true in some w ∈ Σ*?",
                "disabled": false,
                "keywords": [
                  "Theorem. [Büchi, Elgot, Trakhtenbrot 1958] The following problem is decidable: input: MSO sentence using x < y and {a(x)}a ∈ Σ question: is it true in some w ∈ Σ*?"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "137:17",
                "name": "Because the MSO → automata translation is computable",
                "disabled": false,
                "keywords": [
                  "Because the MSO → automata translation is computable"
                ],
                "children": []
              },
              {
                "type": "child",
                "name": "Beyond finite words",
                "id": "137:15",
                "children": [
                  {
                    "type": "show",
                    "id": "137:18",
                    "name": "This also works for ω-words [Büchi] and infinite trees [Rabin].",
                    "disabled": false,
                    "keywords": [
                      "This also works for ω-words [Büchi] and infinite trees [Rabin]."
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "137:161",
                    "name": "Here, there are blurred lines between satisfiability and model checking.",
                    "disabled": false,
                    "keywords": [
                      "Here, there are blurred lines between satisfiability and model checking."
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:769",
                    "name": "iff",
                    "disabled": false,
                    "keywords": [
                      "iff"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:770",
                    "name": "iff",
                    "disabled": false,
                    "keywords": [
                      "iff"
                    ],
                    "children": []
                  }
                ],
                "keywords": [
                  "Beyond finite words"
                ]
              },
              {
                "type": "show",
                "id": "140:768",
                "name": "recognized by a finite monoid",
                "disabled": false,
                "keywords": [
                  "recognized by a finite monoid"
                ],
                "children": []
              },
              {
                "type": "child",
                "name": "Monoids",
                "id": "136:90",
                "children": [
                  {
                    "type": "show",
                    "id": "140:776",
                    "name": "A monoid is: (M, ·, ε)",
                    "disabled": false,
                    "keywords": [
                      "A monoid is: (M, ·, ε)"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:777",
                    "name": "A language L ⊆ Σ* is recognized by a finite monoid M if there is monoid homomorphism",
                    "disabled": false,
                    "keywords": [
                      "A language L ⊆ Σ* is recognized by a finite monoid M if there is monoid homomorphism"
                    ],
                    "children": []
                  },
                  {
                    "type": "child",
                    "name": "monoids to automata",
                    "id": "176:2",
                    "children": [
                      {
                        "type": "show",
                        "id": "176:4",
                        "name": "Consider a language that is recognized by a finite monoid",
                        "disabled": false,
                        "keywords": [
                          "Consider a language that is recognized by a finite monoid"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:47",
                        "name": "Σ*",
                        "disabled": false,
                        "keywords": [
                          "Σ*"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:19",
                        "name": "The same language is recognized by a deterministic finite automaton:",
                        "disabled": false,
                        "keywords": [
                          "The same language is recognized by a deterministic finite automaton:"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:20",
                        "name": "– states: M",
                        "disabled": false,
                        "keywords": [
                          "– states: M"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:21",
                        "name": "– initial state: ε ∈ M",
                        "disabled": false,
                        "keywords": [
                          "– initial state: ε ∈ M"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:22",
                        "name": "– transition function (m, a) ↦ m∙h(a)",
                        "disabled": false,
                        "keywords": [
                          "– transition function (m, a) ↦ m∙h(a)"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:23",
                        "name": "– accepting states: same as in monoid",
                        "disabled": false,
                        "keywords": [
                          "– accepting states: same as in monoid"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:48",
                        "name": "After reading a word abcde, the automaton is in state",
                        "disabled": false,
                        "keywords": [
                          "After reading a word abcde, the automaton is in state"
                        ],
                        "children": []
                      }
                    ],
                    "keywords": [
                      "monoids to automata"
                    ]
                  },
                  {
                    "type": "child",
                    "name": "automata to monoids",
                    "id": "176:49",
                    "children": [
                      {
                        "type": "show",
                        "id": "176:51",
                        "name": "Consider a language that is recognized by a deterministic finite automaton with states Q.",
                        "disabled": false,
                        "keywords": [
                          "Consider a language that is recognized by a deterministic finite automaton with states Q."
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:63",
                        "name": "Consider the function",
                        "disabled": false,
                        "keywords": [
                          "Consider the function"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:60",
                        "name": "This is a homomorphism into a finite monoid.",
                        "disabled": false,
                        "keywords": [
                          "This is a homomorphism into a finite monoid."
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:61",
                        "name": "The accepting set is state transformations, which map the initial state to some accepting state.",
                        "disabled": false,
                        "keywords": [
                          "The accepting set is state transformations, which map the initial state to some accepting state."
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "176:62",
                        "name": "Also works for nondeterministic automata, except that we use the monoid of binary relations on Q.",
                        "disabled": false,
                        "keywords": [
                          "Also works for nondeterministic automata, except that we use the monoid of binary relations on Q."
                        ],
                        "children": []
                      }
                    ],
                    "keywords": [
                      "automata to monoids"
                    ]
                  },
                  {
                    "type": "child",
                    "name": "Monoid advantages",
                    "id": "137:6",
                    "children": [
                      {
                        "type": "show",
                        "id": "137:8",
                        "name": "Monoids have more structure and theory than automata.",
                        "disabled": false,
                        "keywords": [
                          "Monoids have more structure and theory than automata."
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "137:9",
                        "name": "1. Powerful decomposition results for finite monoids Superior to automata concepts like “strongly connected component”",
                        "disabled": false,
                        "keywords": [
                          "1. Powerful decomposition results for finite monoids Superior to automata concepts like “strongly connected component”"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "137:12",
                        "name": "Example: factorization forests",
                        "disabled": false,
                        "keywords": [
                          "Example: factorization forests"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "137:10",
                        "name": "2. Natural subclasses of finite monoids Examples: groups, commutative monoids",
                        "disabled": false,
                        "keywords": [
                          "2. Natural subclasses of finite monoids Examples: groups, commutative monoids"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "137:13",
                        "name": "Schützenberger, McNaughton and Papert: group-free monoids recognize exactly the first-order definable languages",
                        "disabled": false,
                        "keywords": [
                          "Schützenberger, McNaughton and Papert: group-free monoids recognize exactly the first-order definable languages"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "137:11",
                        "name": "3. Beyond finite words, sometimes monoids generalize better than automata “Graph monoids” are a thing, “graph automata” not so much.",
                        "disabled": false,
                        "keywords": [
                          "3. Beyond finite words, sometimes monoids generalize better than automata “Graph monoids” are a thing, “graph automata” not so much."
                        ],
                        "children": []
                      }
                    ],
                    "keywords": [
                      "Monoid advantages"
                    ]
                  }
                ],
                "keywords": [
                  "Monoids"
                ]
              }
            ],
            "keywords": [
              "Finite words"
            ]
          },
          {
            "type": "show",
            "id": "138:172",
            "name": "Treewidth",
            "disabled": false,
            "keywords": [
              "Treewidth"
            ],
            "children": []
          },
          {
            "type": "child",
            "name": "Treelike graphs",
            "id": "136:18",
            "children": [
              {
                "type": "show",
                "id": "140:756",
                "name": "We can also view a graph as a model. The underlying set is the disjoint union of vertices and edges, and there is one relation incident (v, e).",
                "disabled": false,
                "keywords": [
                  "We can also view a graph as a model. The underlying set is the disjoint union of vertices and edges, and there is one relation incident (v, e)."
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "137:265",
                "name": "alternative choice: underlying set is vertices only, and there is relation edge(v, w)",
                "disabled": false,
                "keywords": [
                  "alternative choice: underlying set is vertices only, and there is relation edge(v, w)"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "137:263",
                "name": "Already for first-order logic, the satisfiability problem is undecidable: input: a first-order sentence using the incident relation question: is it true in some graph?",
                "disabled": false,
                "keywords": [
                  "Already for first-order logic, the satisfiability problem is undecidable: input: a first-order sentence using the incident relation question: is it true in some graph?"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "137:264",
                "name": "undecidable also if we ask for finite graphs",
                "disabled": false,
                "keywords": [
                  "undecidable also if we ask for finite graphs"
                ],
                "children": []
              },
              {
                "type": "child",
                "name": "Grids and treelike",
                "id": "140:66",
                "children": [
                  {
                    "type": "show",
                    "id": "140:757",
                    "name": "The graphs that witness undecidability look like this:",
                    "disabled": false,
                    "keywords": [
                      "The graphs that witness undecidability look like this:"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:758",
                    "name": "What about graphs that look like this:",
                    "disabled": false,
                    "keywords": [
                      "What about graphs that look like this:"
                    ],
                    "children": []
                  },
                  {
                    "type": "child",
                    "name": "Treewidth definition",
                    "id": "140:156",
                    "children": [
                      {
                        "type": "show",
                        "id": "140:158",
                        "name": "A graph with ports is a graph with distinguished distinguished vertices.",
                        "disabled": false,
                        "keywords": [
                          "A graph with ports is a graph with distinguished distinguished vertices."
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:269",
                        "name": "ports",
                        "disabled": false,
                        "keywords": [
                          "ports"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:157",
                        "name": "Definition. A graph has treewidth k ∈ {1,2, ...} if it can be constructed using the following operations, so that in every moment at most k+1 ports are used.",
                        "disabled": false,
                        "keywords": [
                          "Definition. A graph has treewidth k ∈ {1,2, ...} if it can be constructed using the following operations, so that in every moment at most k+1 ports are used."
                        ],
                        "children": []
                      },
                      {
                        "type": "hide",
                        "id": "140:269",
                        "name": "ports",
                        "disabled": false,
                        "keywords": [
                          "ports"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:159",
                        "name": "Constant",
                        "disabled": false,
                        "keywords": [
                          "Constant"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:171",
                        "name": "Forget",
                        "disabled": false,
                        "keywords": [
                          "Forget"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:189",
                        "name": "Output: the chosen port is no longer a port",
                        "disabled": false,
                        "keywords": [
                          "Output: the chosen port is no longer a port"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:235",
                        "name": "Fuse",
                        "disabled": false,
                        "keywords": [
                          "Fuse"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:205",
                        "name": "Output: the disjoint union, except that pairs from the bijection are fused",
                        "disabled": false,
                        "keywords": [
                          "Output: the disjoint union, except that pairs from the bijection are fused"
                        ],
                        "children": []
                      },
                      {
                        "type": "child",
                        "name": "A tree decomposition",
                        "id": "140:299",
                        "children": [
                          {
                            "type": "show",
                            "id": "140:495",
                            "name": "The 8-cycle has treewidth 2, because it can be constructed using 3 ports.",
                            "disabled": false,
                            "keywords": [
                              "The 8-cycle has treewidth 2, because it can be constructed using 3 ports."
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:300",
                            "name": "Group 39",
                            "disabled": false,
                            "keywords": [
                              "Group 39"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:334",
                            "name": "Group 40",
                            "disabled": false,
                            "keywords": [
                              "Group 40"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:308",
                            "name": "Group 41",
                            "disabled": false,
                            "keywords": [
                              "Group 41"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:320",
                            "name": "Group 43",
                            "disabled": false,
                            "keywords": [
                              "Group 43"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:343",
                            "name": "Group 44",
                            "disabled": false,
                            "keywords": [
                              "Group 44"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:314",
                            "name": "Group 45",
                            "disabled": false,
                            "keywords": [
                              "Group 45"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:368",
                            "name": "Group 46",
                            "disabled": false,
                            "keywords": [
                              "Group 46"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:354",
                            "name": "Group 47",
                            "disabled": false,
                            "keywords": [
                              "Group 47"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:383",
                            "name": "Group 48",
                            "disabled": false,
                            "keywords": [
                              "Group 48"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:456",
                            "name": "Group 49",
                            "disabled": false,
                            "keywords": [
                              "Group 49"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:476",
                            "name": "Group 50",
                            "disabled": false,
                            "keywords": [
                              "Group 50"
                            ],
                            "children": []
                          },
                          {
                            "type": "show",
                            "id": "140:496",
                            "name": "All cycles have treewidth 2.",
                            "disabled": false,
                            "keywords": [
                              "All cycles have treewidth 2."
                            ],
                            "children": []
                          }
                        ],
                        "keywords": [
                          "A tree decomposition"
                        ]
                      }
                    ],
                    "keywords": [
                      "Treewidth definition"
                    ]
                  }
                ],
                "keywords": [
                  "Grids and treelike"
                ]
              },
              {
                "type": "child",
                "name": "Courcelle Seese",
                "id": "140:499",
                "children": [
                  {
                    "type": "show",
                    "id": "140:501",
                    "name": "Theorem. [Courcelle] The following problem is decidable: input: an MSO sentence φ and k ∈ {1, 2, ..} question: is φ true in some graph of treewidth at most k?",
                    "disabled": false,
                    "keywords": [
                      "Theorem. [Courcelle] The following problem is decidable: input: an MSO sentence φ and k ∈ {1, 2, ..} question: is φ true in some graph of treewidth at most k?"
                    ],
                    "children": []
                  },
                  {
                    "type": "child",
                    "name": "Courcelle proof",
                    "id": "140:505",
                    "children": [
                      {
                        "type": "show",
                        "id": "140:760",
                        "name": "A width k tree decomposition can be seen as a finite tree",
                        "disabled": false,
                        "keywords": [
                          "A width k tree decomposition can be seen as a finite tree"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:727",
                        "name": "Using MSO, one can interpret the graph in the tree decomposition:",
                        "disabled": false,
                        "keywords": [
                          "Using MSO, one can interpret the graph in the tree decomposition:"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:761",
                        "name": "width k tree decompositions",
                        "disabled": false,
                        "keywords": [
                          "width k tree decompositions"
                        ],
                        "children": []
                      },
                      {
                        "type": "show",
                        "id": "140:762",
                        "name": "φ is true in some graph of treewidth k",
                        "disabled": false,
                        "keywords": [
                          "φ is true in some graph of treewidth k"
                        ],
                        "children": []
                      }
                    ],
                    "keywords": [
                      "Courcelle proof"
                    ]
                  },
                  {
                    "type": "show",
                    "id": "140:503",
                    "name": "A deep theorem of Robertson and Seymour says that if a graph has large treewidth, then it contains a large grid as a minor.",
                    "disabled": false,
                    "keywords": [
                      "A deep theorem of Robertson and Seymour says that if a graph has large treewidth, then it contains a large grid as a minor."
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:504",
                    "name": "MSO can find that minor, and use it to describe a computation of a Turing machine. Hence:",
                    "disabled": false,
                    "keywords": [
                      "MSO can find that minor, and use it to describe a computation of a Turing machine. Hence:"
                    ],
                    "children": []
                  },
                  {
                    "type": "show",
                    "id": "140:502",
                    "name": "Theorem. [Seese] If C is a class of graphs of unbouned treewidth, then the following problem is undecidable: input: an MSO sentence φ question: is φ true in some graph from C?",
                    "disabled": false,
                    "keywords": [
                      "Theorem. [Seese] If C is a class of graphs of unbouned treewidth, then the following problem is undecidable: input: an MSO sentence φ question: is φ true in some graph from C?"
                    ],
                    "children": []
                  }
                ],
                "keywords": [
                  "Courcelle Seese"
                ]
              }
            ],
            "keywords": [
              "Treelike graphs"
            ]
          },
          {
            "type": "child",
            "name": "Restricted syntax",
            "id": "140:728",
            "children": [
              {
                "type": "show",
                "id": "140:735",
                "name": "I will not talk much about fragments of first-order logic, for which satisfiability over all models is decidable, such as:",
                "disabled": false,
                "keywords": [
                  "I will not talk much about fragments of first-order logic, for which satisfiability over all models is decidable, such as:"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:753",
                "name": "∃* formulas",
                "disabled": false,
                "keywords": [
                  "∃* formulas"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:752",
                "name": "Also: ∃*∀* [Bernays Schönfinkel 1928], ∃*∀ ∃* [Ackermann 1928], ...",
                "disabled": false,
                "keywords": [
                  "Also: ∃*∀* [Bernays Schönfinkel 1928], ∃*∀ ∃* [Ackermann 1928], ..."
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:754",
                "name": "Two-variable first-order logic [Mortimer 1975]",
                "disabled": false,
                "keywords": [
                  "Two-variable first-order logic [Mortimer 1975]"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:747",
                "name": "Robustly decidable using counting methods forthcoming book [Pratt-Hartmann]",
                "disabled": false,
                "keywords": [
                  "Robustly decidable using counting methods forthcoming book [Pratt-Hartmann]"
                ],
                "children": []
              },
              {
                "type": "show",
                "id": "140:755",
                "name": "The guarded fragment [Andréka, van Benthem, Németi 1998]",
                "disabled": false,
                "keywords": [
                  "The guarded fragment [Andréka, van Benthem, Németi 1998]"
                ],
                "children": []
              }
            ],
            "keywords": [
              "Restricted syntax"
            ]
          }
        ],
        "keywords": [
          "Satisfiability"
        ]
      }
    ],
    "keywords": [
      "First slide"
    ]
  },
  "version": 0.85
}