{
  "version": 0.91,
  "presentation": "Lecture 2. Space and time",
  "slideDict": {
    "72:36": "72_36",
    "68:18": "68_18",
    "76:258": "76_258",
    "72:46": "72_46",
    "72:45": "72_45",
    "76:322": "76_322",
    "128:926": "128_926",
    "126:6": "126_6",
    "126:52": "126_52",
    "72:44": "72_44",
    "72:38": "72_38",
    "72:42": "72_42",
    "72:39": "72_39",
    "72:43": "72_43",
    "72:41": "72_41",
    "126:575": "126_575",
    "128:837": "128_837",
    "132:128": "132_128",
    "128:844": "128_844",
    "128:856": "128_856",
    "216:51": "NPSpace"
  },
  "tree": {
    "type": "child",
    "name": "first slide",
    "id": "72:36",
    "merged": false,
    "children": [
      {
        "type": "show",
        "id": "78:0",
        "name": "Ptime",
        "disabled": false,
        "keywords": [
          "P",
          "Ptime"
        ],
        "eventId": "0"
      },
      {
        "type": "child",
        "name": "Polynomial time",
        "id": "68:18",
        "children": [
          {
            "type": "show",
            "id": "68:13",
            "name": "Time complexity",
            "disabled": false,
            "keywords": [
              "The time complexity of a Turing machine is:",
              "n ∈ {0, 1, ...} ↦",
              "maximal number of steps used by the machine, on inputs of length n",
              "Time complexity"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "68:17",
            "name": "Polynomial time: problems that can be solved by a Turing machine whose running time is ≤ p(n) for some polynomial p.",
            "disabled": false,
            "keywords": [
              "Polynomial time: problems that can be solved by a Turing machine whose running time is ≤ p(n) for some polynomial p."
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "76:155",
            "name": "Examples",
            "disabled": false,
            "keywords": [
              "Examples"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "76:169",
            "name": "Is an undirected graph connected?",
            "disabled": false,
            "keywords": [
              "Is an undirected graph connected?"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "76:177",
            "name": "Is there a path from s to t in a directed graph?",
            "disabled": false,
            "keywords": [
              "Is there a path from s to t in a directed graph?"
            ],
            "eventId": "4"
          },
          {
            "type": "show",
            "id": "76:186",
            "name": "Is a finite automaton nonempty?",
            "disabled": false,
            "keywords": [
              "Is a finite automaton nonempty?"
            ],
            "eventId": "5"
          },
          {
            "type": "show",
            "id": "76:244",
            "name": "Group 38",
            "disabled": false,
            "keywords": [
              "can be done in nondterministic logarithmic space",
              "Group 38"
            ],
            "eventId": "6"
          },
          {
            "type": "show",
            "id": "76:196",
            "name": "Is a context-free grammar nonempty?",
            "disabled": false,
            "keywords": [
              "Is a context-free grammar nonempty?"
            ],
            "eventId": "7"
          }
        ],
        "keywords": [
          "Polynomial time"
        ],
        "eventId": "1"
      },
      {
        "type": "show",
        "id": "78:2",
        "name": "Exptime",
        "disabled": false,
        "keywords": [
          "ExpTime",
          "Exptime"
        ],
        "eventId": "2"
      },
      {
        "type": "child",
        "name": "Exponential time",
        "id": "76:258",
        "children": [
          {
            "type": "show",
            "id": "79:0",
            "name": "Group 40",
            "disabled": false,
            "keywords": [
              "Exponential time: problems that can be solved by a Turing machine whose running time is ≤ 2 for some polynomial p.",
              "p(n)",
              "Group 40"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "76:885",
            "name": "Group 39",
            "disabled": false,
            "keywords": [
              "Square of exponential time is also exponential:",
              "Group 39"
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "76:642",
            "name": "Examples",
            "disabled": false,
            "keywords": [
              "Examples"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "76:646",
            "name": "Is a context-free grammar nonempty?",
            "disabled": false,
            "keywords": [
              "Is a context-free grammar nonempty?"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "76:852",
            "name": "Is a finite automaton nonempty?",
            "disabled": false,
            "keywords": [
              "Is a finite automaton nonempty?"
            ],
            "eventId": "4"
          },
          {
            "type": "show",
            "id": "76:645",
            "name": "Is a finite automaton nonempty?",
            "disabled": false,
            "keywords": [
              "Is a finite automaton nonempty?"
            ],
            "eventId": "5"
          },
          {
            "type": "show",
            "id": "76:786",
            "name": "Is a finite automaton nonempty?",
            "disabled": false,
            "keywords": [
              "Is a finite automaton nonempty?"
            ],
            "eventId": "6"
          }
        ],
        "keywords": [
          "Exponential time"
        ],
        "eventId": "3"
      },
      {
        "type": "show",
        "id": "51:423",
        "name": "Thm. ExpTime > P",
        "disabled": false,
        "keywords": [
          "Thm. ExpTime > P"
        ],
        "eventId": "4"
      },
      {
        "type": "child",
        "name": "PTIME < EXPTIME",
        "id": "72:46",
        "children": [
          {
            "type": "show",
            "id": "48:34",
            "name": "exponential complete language",
            "disabled": false,
            "keywords": [
              "Consider the following language:",
              "m ∈ {0,1}* represents a Turing machine, which accepts w ∈ {0,1}* in time whose binary representation is t ∈ {0,1}*",
              "{",
              "}",
              "m#w#t :",
              "exponential complete language"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "48:41",
            "name": "in exptime",
            "disabled": false,
            "keywords": [
              "This language is clearly in ExpTime, the corresponding Turing machine runs in time at most",
              "in exptime"
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "48:60",
            "name": "Suppose that this language is recognised by a polynomial time Turing machine M.",
            "disabled": false,
            "keywords": [
              "Suppose that this language is recognised by a polynomial time Turing machine M."
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "48:61",
            "name": "For k ∈ {1, 2, ...} consider the following Turing machine N[k]:",
            "disabled": false,
            "keywords": [
              "For k ∈ {1, 2, ...} consider the following Turing machine N[k]:"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "48:62",
            "name": "exponential diagonal",
            "disabled": false,
            "keywords": [
              "w ∈ {0,1}* ↦",
              "Does w represent a Turing machine that accepts input w in time at most 2",
              "reject",
              "accept",
              "yes",
              "no",
              "k",
              "exponential diagonal"
            ],
            "eventId": "4"
          },
          {
            "type": "child",
            "name": "Exponential paradox",
            "id": "72:45",
            "children": [
              {
                "type": "show",
                "id": "48:93",
                "name": "N is polynomial",
                "disabled": false,
                "keywords": [
                  "Using M, we can construct N[k] so that:",
                  "running time of N[k]",
                  "p is a polynomial that depends only on M",
                  "n is input size",
                  "N is polynomial"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "48:85",
                "name": "size of N is linear",
                "disabled": false,
                "keywords": [
                  "size of N[k]",
                  "size of N is linear"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "48:81",
                "name": "k large enough",
                "disabled": false,
                "keywords": [
                  "If k is large enough, then the running time of N[k] on N[k] is at most 2",
                  "k",
                  "grows polynomially with k",
                  "k large enough"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "48:77",
                "name": "paradox",
                "disabled": false,
                "keywords": [
                  "For this k we have",
                  "N[k] accepts N[k] ⇒ N[k] rejects N[k]",
                  "N[k] rejects N[k] ⇒ N[k] accepts N[k]",
                  "paradox"
                ],
                "eventId": "3"
              }
            ],
            "keywords": [
              "Exponential paradox"
            ],
            "eventId": "5"
          }
        ],
        "keywords": [
          "PTIME < EXPTIME"
        ],
        "eventId": "5"
      },
      {
        "type": "show",
        "id": "51:427",
        "name": "For the same reasons, there is an infinite hierarchy: P < ExpTime < 2ExpTime < ...",
        "disabled": false,
        "keywords": [
          "For the same reasons, there is an infinite hierarchy: P < ExpTime < 2ExpTime < ..."
        ],
        "eventId": "6"
      },
      {
        "type": "show",
        "id": "78:1",
        "name": "PSPace",
        "disabled": false,
        "keywords": [
          "PSpace",
          "PSPace"
        ],
        "eventId": "7"
      },
      {
        "type": "child",
        "name": "PSpace",
        "id": "76:322",
        "children": [
          {
            "type": "show",
            "id": "216:27",
            "name": "Polynomial space: problems that can be solved by a Turing machine whose space complexity is ≤ p(n) for some polynomial p.",
            "disabled": false,
            "keywords": [
              "Polynomial space: problems that can be solved by a Turing machine whose space complexity is ≤ p(n) for some polynomial p.",
              "number of cells used in work tape"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "126:87",
            "name": "Group 58",
            "disabled": false,
            "keywords": [
              "If an automaton has n states and rejects some word, then it rejects a word of length",
              "Group 58"
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "76:353",
            "name": "Examples",
            "disabled": false,
            "keywords": [
              "Examples"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "76:355",
            "name": "Is there a path from s to t in a directed graph?",
            "disabled": false,
            "keywords": [
              "Is there a path from s to t in a directed graph?"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "76:412",
            "name": "Is there a path from s to t in a directed graph?",
            "disabled": false,
            "keywords": [
              "Is there a path from s to t in a directed graph?"
            ],
            "eventId": "4"
          },
          {
            "type": "child",
            "name": "PSPACE contained in EXPTIME",
            "id": "128:926",
            "children": [
              {
                "type": "show",
                "id": "128:936",
                "name": "PSpace ⊆ ExpTime",
                "disabled": false,
                "keywords": [
                  "PSpace ⊆ ExpTime"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "128:937",
                "name": "Main observation: The number of configurations of a PSpace machine is at most exponential, and it is enough to consider computations without loops.",
                "disabled": false,
                "keywords": [
                  "Main observation: The number of configurations of a PSpace machine is at most exponential, and it is enough to consider computations without loops."
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "129:782",
                "name": "Group 59",
                "disabled": false,
                "keywords": [
                  "Suppose that M is a deterministic Turing machine using at most p(n) space.",
                  "a polynomial",
                  "Group 59"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "129:783",
                "name": "Group 60",
                "disabled": false,
                "keywords": [
                  "An accepting computation can have length at most nc",
                  "p(n)",
                  "Group 60"
                ],
                "eventId": "3"
              },
              {
                "type": "show",
                "id": "128:938",
                "name": "We can simply run it M, while counting the number of steps, and reject once the exponential bound is exceeded.",
                "disabled": false,
                "keywords": [
                  "We can simply run it M, while counting the number of steps, and reject once the exponential bound is exceeded."
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "129:780",
                "name": "By the Sipser theorem (see later), this will not be needed.",
                "disabled": false,
                "keywords": [
                  "By the Sipser theorem (see later), this will not be needed."
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "128:943",
                "name": "Also works for nondeterministic PSpace: explore the tree of all computations, using depth-first search, with an exponential bound on recursion depth.",
                "disabled": false,
                "keywords": [
                  "Also works for nondeterministic PSpace: explore the tree of all computations, using depth-first search, with an exponential bound on recursion depth."
                ],
                "eventId": "6"
              },
              {
                "type": "show",
                "id": "129:781",
                "name": "By the Savitch theorem (see later), this will not be needed.",
                "disabled": false,
                "keywords": [
                  "By the Savitch theorem (see later), this will not be needed."
                ],
                "eventId": "7"
              }
            ],
            "keywords": [
              "PSPACE contained in EXPTIME"
            ],
            "eventId": "5"
          }
        ],
        "keywords": [
          "PSpace"
        ],
        "eventId": "8"
      },
      {
        "type": "show",
        "id": "123:775",
        "name": "NP",
        "disabled": false,
        "keywords": [
          "NP"
        ],
        "eventId": "9"
      },
      {
        "type": "child",
        "name": "NP",
        "id": "126:6",
        "children": [
          {
            "type": "show",
            "id": "216:73",
            "name": "nondeterministic polynomial time",
            "disabled": false,
            "keywords": [
              "nondeterministic polynomial time"
            ],
            "eventId": "0"
          },
          {
            "type": "child",
            "name": "Equivalent definitions of NP",
            "id": "126:52",
            "children": [
              {
                "type": "show",
                "id": "126:54",
                "name": "Equivalent definitions of NP",
                "disabled": false,
                "keywords": [
                  "Equivalent definitions of NP"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "126:73",
                "name": "usual definition",
                "disabled": false,
                "keywords": [
                  "There is a polynomial p and a nondeterministic Turing machine M such that",
                  "v ∈ L ⟺ M has an accepting run of length < p(|v|)",
                  "(for words in L, the machine might have rejecting runs, and longer accepting runs)",
                  "usual definition"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "216:70",
                "name": "There is a polynomial p and a deterministic Turing machine M such that",
                "disabled": false,
                "keywords": [
                  "There is a polynomial p and a deterministic poly time Turing machine M such that",
                  "with a witness tape",
                  "v ∈ L",
                  "⟺",
                  "∃w of size < p(|v|) such that M accepts (v, w)",
                  "There is a polynomial p and a deterministic Turing machine M such that"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "126:74",
                "name": "all runs are short",
                "disabled": false,
                "keywords": [
                  "There is a polynomial p and a nondeterministic Turing machine M such that",
                  "v ∈ L ⟺ M has an accepting run of length < p(|v|)",
                  "and for every word (in or not in L), all runs have length < p(|v|)",
                  "all runs are short"
                ],
                "eventId": "3"
              },
              {
                "type": "show",
                "id": "126:79",
                "name": "use nondterminism",
                "disabled": false,
                "keywords": [
                  "use nondeterminism to guess v, and then run the deterministic Turing machine",
                  "⇒",
                  "use nondterminism"
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "126:78",
                "name": "witness is computation",
                "disabled": false,
                "keywords": [
                  "the word v, called the witness, is the computation of the nondeterministic Turing machine",
                  "⇒",
                  "witness is computation"
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "126:76",
                "name": "special case",
                "disabled": false,
                "keywords": [
                  "special case",
                  "⇒"
                ],
                "eventId": "6"
              },
              {
                "type": "show",
                "id": "126:77",
                "name": "reject after exceeding bound",
                "disabled": false,
                "keywords": [
                  "the machine can compute p(|v|), and reject immediately once the computation time exceeds this bound",
                  "⇒",
                  "reject after exceeding bound"
                ],
                "eventId": "7"
              }
            ],
            "keywords": [
              "Equivalent definitions of NP"
            ],
            "eventId": "1"
          }
        ],
        "keywords": [
          "Text",
          "NP"
        ],
        "eventId": "10"
      },
      {
        "type": "show",
        "id": "126:574",
        "name": "strictness",
        "disabled": false,
        "keywords": [
          "apart from this, we know nothing about the strictness of these inclusions:",
          "any nonempty subset of these three inclusions could be strict",
          "P ⊆ NP ⊆ PSpace ⊆ ExpTime",
          "strictness"
        ],
        "eventId": "11"
      },
      {
        "type": "show",
        "id": "51:439",
        "name": "Savitch’s theorem: Nondeterministic polynomial space = deterministic polynomial space",
        "disabled": false,
        "keywords": [
          "Savitch’s theorem: Nondeterministic polynomial space = deterministic polynomial space"
        ],
        "eventId": "12"
      },
      {
        "type": "child",
        "name": "NPSpace",
        "id": "216:51",
        "children": [
          {
            "type": "show",
            "id": "216:61",
            "name": "Definition. Nondeterministic PSpace",
            "disabled": false,
            "keywords": [
              "Definition. Nondeterministic PSpace",
              "There is a nondeterministic Turing machine M and a polynomial p such that:",
              "v ∈ L ⟺ there is an accepting run of M which uses space < p(|v|)"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "216:62",
            "name": "Equivalent definition. There is a deterministic Turing machine M and a polynomial p such that:",
            "disabled": false,
            "keywords": [
              "Equivalent definition. There is a deterministic Turing machine M and a polynomial p such that:",
              "v ∈ L ⟺ ∃w M accepts (v, w) using space < p(|v|)"
            ],
            "eventId": "1"
          },
          {
            "type": "child",
            "name": "Savitch",
            "id": "72:44",
            "children": [
              {
                "type": "show",
                "id": "79:71",
                "name": "Group 42",
                "disabled": false,
                "keywords": [
                  "A computation of space n can have time at most k",
                  "n",
                  "Group 42"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "79:108",
                "name": "Group 43",
                "disabled": false,
                "keywords": [
                  "F(source, target, n, m)",
                  "0",
                  "Group 43"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "79:35",
                "name": "Group 41",
                "disabled": false,
                "keywords": [
                  "configurations",
                  "time ≤ 2",
                  "space ≤ m",
                  "n",
                  "Group 41"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "79:303",
                "name": "Group 46",
                "disabled": false,
                "keywords": [
                  "if n = 1 then",
                  "1",
                  "check if source can reach target in 0 or 1 steps",
                  "2",
                  "Group 46"
                ],
                "eventId": "3"
              },
              {
                "type": "show",
                "id": "79:344",
                "name": "Group 47",
                "disabled": false,
                "keywords": [
                  "for every configuration c of memory at most n:",
                  "return false",
                  "if F(source, c, n–1, m) then",
                  "if F(c, target, n–1, m) then",
                  "else",
                  "return true",
                  "3",
                  "6",
                  "4",
                  "7",
                  "5",
                  "8",
                  "Group 47"
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "79:386",
                "name": "Group 48",
                "disabled": false,
                "keywords": [
                  "This is a deterministic program that uses space O(n × m)",
                  "memory for each recursive call",
                  "recursion depth",
                  "Group 48"
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "51:498",
                "name": "To prove Savitch’s theorem, for a nondeterministic Turing machine that runs in space p(n), we run this program for: source = initial configuration target = accepting configuration n = log k × p(n) m = p(n)",
                "disabled": false,
                "keywords": [
                  "To prove Savitch’s theorem, for a nondeterministic Turing machine that runs in space p(n), we run this program for: source = initial configuration target = accepting configuration n = log k × p(n) m = p(n)"
                ],
                "eventId": "6"
              }
            ],
            "keywords": [
              "Savitch"
            ],
            "eventId": "2"
          }
        ],
        "keywords": [
          "NPSpace"
        ],
        "eventId": "13"
      },
      {
        "type": "show",
        "id": "51:438",
        "name": "Sipser’s theorem: machines with finite space can be forced to halt",
        "disabled": false,
        "keywords": [
          "Sipser’s theorem: machines with finite space can be forced to halt"
        ],
        "eventId": "14"
      },
      {
        "type": "child",
        "name": "Sipser",
        "id": "72:38",
        "children": [
          {
            "type": "show",
            "id": "51:48",
            "name": "Rough idea",
            "disabled": false,
            "keywords": [
              "Rough idea"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "51:368",
            "name": "without any extra space",
            "disabled": false,
            "keywords": [
              "without any extra space"
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "51:34",
            "name": "Theorem (Sipser). For every deterministic Turing machine M, there is a deterministic Turing machine N such that for every input word:",
            "disabled": false,
            "keywords": [
              "Theorem (Sipser). For every deterministic Turing machine M, there is a deterministic Turing machine N such that for every input word:"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "51:39",
            "name": "1. M accepts if and only if N accepts",
            "disabled": false,
            "keywords": [
              "1. M accepts if and only if N accepts"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "51:291",
            "name": "2. if M uses n < ∞ memory cells, then N halts and also uses n cells.",
            "disabled": false,
            "keywords": [
              "2. if M uses n < ∞ memory cells, then N halts and also uses n cells."
            ],
            "eventId": "4"
          },
          {
            "type": "child",
            "name": "Sipser Search",
            "id": "72:39",
            "children": [
              {
                "type": "show",
                "id": "51:373",
                "name": "Consider the graph of configurations that use memory ≤ m",
                "disabled": false,
                "keywords": [
                  "Consider the graph of configurations that use memory ≤ m"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "79:3570",
                "name": "This is a directed graph",
                "disabled": false,
                "keywords": [
                  "This is a directed graph with outdegree ≤ 1 and indegree ≤ k",
                  "because the machine is deterministic",
                  "9 × Q × Γ",
                  "This is a directed graph"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "51:415",
                "name": "Group 37",
                "disabled": false,
                "keywords": [
                  "Group 37"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "51:413",
                "name": "Group 36",
                "disabled": false,
                "keywords": [
                  "Group 36"
                ],
                "eventId": "3"
              },
              {
                "type": "show",
                "id": "51:412",
                "name": "Group 35",
                "disabled": false,
                "keywords": [
                  "Group 35"
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "51:161",
                "name": "each component is either a tree...",
                "disabled": false,
                "keywords": [
                  "each component is either a tree..."
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "51:163",
                "name": "...or a tree with a cycle",
                "disabled": false,
                "keywords": [
                  "...or a tree with a cycle"
                ],
                "eventId": "6"
              },
              {
                "type": "show",
                "id": "79:4887",
                "name": "Group 57",
                "disabled": false,
                "keywords": [
                  "terminals",
                  "Group 57"
                ],
                "eventId": "7"
              },
              {
                "type": "show",
                "id": "210:3597",
                "name": "A terminal in this graph is a vertex of outdegree 0.",
                "disabled": false,
                "keywords": [
                  "A terminal in this graph is a vertex of outdegree 0.",
                  "(a) accepting configuration (b) rejecting configuration (c) will increase memory to m+1",
                  "If a component has a terminal, then it is a tree."
                ],
                "eventId": "8"
              },
              {
                "type": "show",
                "id": "51:169",
                "name": "Solution: Start in the accepting configuration, and search the tree (dfs) for the initial configuration.",
                "disabled": false,
                "keywords": [
                  "Solution: Start in the accepting configuration, and search the tree (dfs) for the initial configuration."
                ],
                "eventId": "9"
              },
              {
                "type": "show",
                "id": "210:3591",
                "name": "Solution: Start in the accepting configuration, and search the tree (dfs) for the initial configuration.",
                "disabled": false,
                "keywords": [
                  "Solution: Start in the accepting configuration, and search the tree (dfs) for the initial configuration."
                ],
                "eventId": "10"
              },
              {
                "type": "show",
                "id": "210:3497",
                "name": "If there are 0 such terminals, the machine loops in memory ≤ m.",
                "disabled": false,
                "keywords": [
                  "If there are 0 such terminals, the machine loops in memory ≤ m."
                ],
                "eventId": "11"
              },
              {
                "type": "show",
                "id": "210:3592",
                "name": "If there is 1 such terminal, we can reject, accept, or increment m.",
                "disabled": false,
                "keywords": [
                  "If there is 1 such terminal, we can reject, accept, or increment m."
                ],
                "eventId": "12"
              },
              {
                "type": "child",
                "name": "Compute the space",
                "id": "72:42",
                "children": [
                  {
                    "type": "show",
                    "id": "216:74",
                    "name": "The algorithm",
                    "disabled": false,
                    "keywords": [
                      "The algorithm"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "79:2506",
                    "name": "Group 49",
                    "disabled": false,
                    "keywords": [
                      "write a memory bound m on the tape (initially, m = 1)",
                      "1",
                      "Group 49"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "79:2611",
                    "name": "Group 50",
                    "disabled": false,
                    "keywords": [
                      "for every configuration c with memory ≤ m",
                      "2",
                      "Group 50"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "79:2718",
                    "name": "Group 51",
                    "disabled": false,
                    "keywords": [
                      "if c is a terminal",
                      "3",
                      "Group 51"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "79:2827",
                    "name": "Group 52",
                    "disabled": false,
                    "keywords": [
                      "if c can be reached from the initial configuration using memory ≤ m",
                      "4",
                      "Group 52"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "child",
                    "name": "Sipser Search 2",
                    "id": "72:41",
                    "children": [
                      {
                        "type": "show",
                        "id": "79:4715",
                        "name": "Group 56",
                        "disabled": false,
                        "keywords": [
                          "Given a configuration C and i ∈ {0, 1, 2, ...., k} we can compute the i-th neighbour of C, using no extra space.",
                          "q",
                          "p",
                          "r",
                          "neighbour 1",
                          "neighbour 2",
                          "neighbour 0",
                          "neighbour 3",
                          "Group 56"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "51:256",
                        "name": "The simulating machine remembers in its state which neighbour it has visited in the previous step.",
                        "disabled": false,
                        "keywords": [
                          "The simulating machine remembers in its state which neighbour it has visited in the previous step."
                        ],
                        "eventId": "1"
                      }
                    ],
                    "keywords": [
                      "Sipser Search 2"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "79:2938",
                    "name": "Group 53",
                    "disabled": false,
                    "keywords": [
                      "if c is accepting then accept, if it is rejecting then reject",
                      "5",
                      "Group 53"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "79:3051",
                    "name": "Group 54",
                    "disabled": false,
                    "keywords": [
                      "if c increases the memory bound to m+1, then increment m and goto 2",
                      "6",
                      "Group 54"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "79:3166",
                    "name": "Group 55",
                    "disabled": false,
                    "keywords": [
                      "if no terminal is accessible from the initial configuration, then reject",
                      "7",
                      "Group 55"
                    ],
                    "eventId": "8"
                  }
                ],
                "keywords": [
                  "Compute the space"
                ],
                "eventId": "13"
              }
            ],
            "keywords": [
              "Sipser Search"
            ],
            "eventId": "5"
          }
        ],
        "keywords": [
          "Sipser"
        ],
        "eventId": "15"
      },
      {
        "type": "show",
        "id": "148:5",
        "name": "L and NL",
        "disabled": false,
        "keywords": [
          "NL",
          "L and NL"
        ],
        "eventId": "16"
      },
      {
        "type": "child",
        "name": "Nondeterministic Logspace",
        "id": "126:575",
        "children": [
          {
            "type": "show",
            "id": "128:790",
            "name": "Logarithmic space",
            "disabled": false,
            "keywords": [
              "Logarithmic space"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "216:45",
            "name": "The work tape has size at most log(poly n)",
            "disabled": false,
            "keywords": [
              "The work tape has size at most log(poly n)"
            ],
            "eventId": "1"
          },
          {
            "type": "child",
            "name": "Savitch does not work for logspace",
            "id": "128:837",
            "children": [
              {
                "type": "show",
                "id": "132:175",
                "name": "Group 65",
                "disabled": false,
                "keywords": [
                  "=",
                  "logarithmic",
                  "Group 65"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "132:176",
                "name": "Group 66",
                "disabled": false,
                "keywords": [
                  "=",
                  "Group 66"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "132:178",
                "name": "not logarithmic, but polylogarithmic",
                "disabled": false,
                "keywords": [
                  "not logarithmic, but polylogarithmic"
                ],
                "eventId": "2"
              },
              {
                "type": "child",
                "name": "Polylog and Savitch",
                "id": "132:128",
                "children": [
                  {
                    "type": "show",
                    "id": "132:130",
                    "name": "Group 61",
                    "disabled": false,
                    "keywords": [
                      "=",
                      "Group 61"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "132:131",
                    "name": "Group 62",
                    "disabled": false,
                    "keywords": [
                      "=",
                      "Group 62"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "132:132",
                    "name": "Group 63",
                    "disabled": false,
                    "keywords": [
                      "=",
                      "Group 63"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "132:133",
                    "name": "Group 64",
                    "disabled": false,
                    "keywords": [
                      "Group 64"
                    ],
                    "eventId": "3"
                  }
                ],
                "keywords": [
                  "Polylog and Savitch"
                ],
                "eventId": "3"
              }
            ],
            "keywords": [
              "Savitch does not work for logspace"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "216:46",
            "name": "For this class it is important to separate the input and work tapes.",
            "disabled": false,
            "keywords": [
              "For this class it is important to separate the input and work tapes."
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "148:1",
            "name": "L ",
            "disabled": false,
            "keywords": [
              "L = deterministic logarithmic space",
              "L "
            ],
            "eventId": "4"
          },
          {
            "type": "show",
            "id": "227:1",
            "name": "NL = nondeterministic logarithmic space",
            "disabled": false,
            "keywords": [
              "NL = nondeterministic logarithmic space"
            ],
            "eventId": "5"
          },
          {
            "type": "show",
            "id": "227:4",
            "name": "There is a nondeterministic Turing machine M and a polynomial p such that:",
            "disabled": false,
            "keywords": [
              "There is a nondeterministic Turing machine M such that:",
              "v ∈ L iff there is an accepting run of M which uses space at most O(log |v|)",
              "There is a nondeterministic Turing machine M and a polynomial p such that:"
            ],
            "eventId": "6"
          },
          {
            "type": "show",
            "id": "216:67",
            "name": "Equivalent definition. There is a deterministic Turing machine M and a polynomial p such that:",
            "disabled": false,
            "keywords": [
              "Equivalent definition. There is a deterministic Turing machine M with a one-way witness tape such that:",
              "v ∈ L iff ∃w M accepts (v, w) using space at most O(log |v|)",
              "Equivalent definition. There is a deterministic Turing machine M and a polynomial p such that:"
            ],
            "eventId": "7"
          },
          {
            "type": "show",
            "id": "228:27",
            "name": "Applying the Savitch construction to a nondeterministic logspace machine gives a deterministic machine in space",
            "disabled": false,
            "keywords": [
              "Applying the Savitch construction to a nondeterministic logspace machine gives a deterministic machine in space"
            ],
            "eventId": "8"
          },
          {
            "type": "show",
            "id": "128:840",
            "name": "But at least nondeterministic logarithmic space is closed under complementation.",
            "disabled": false,
            "keywords": [
              "But at least nondeterministic logarithmic space is closed under complementation."
            ],
            "eventId": "9"
          },
          {
            "type": "show",
            "id": "128:842",
            "name": "unlike for NP, where we coNP is a thing",
            "disabled": false,
            "keywords": [
              "unlike for NP, where we coNP is a thing"
            ],
            "eventId": "10"
          },
          {
            "type": "child",
            "name": "Immerman Szelepcseni",
            "id": "128:844",
            "children": [
              {
                "type": "show",
                "id": "128:846",
                "name": "There is a nondeterministic logspace machine which does the following:",
                "disabled": false,
                "keywords": [
                  "There is a nondeterministic logspace machine which does the following:"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "128:847",
                "name": "input: a directed graph, with a designated source vertex",
                "disabled": false,
                "keywords": [
                  "input: a directed graph, with a designated source vertex"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "128:848",
                "name": "output: the number of vertices reachable from the source",
                "disabled": false,
                "keywords": [
                  "output: the number of vertices reachable from the source"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "128:915",
                "name": "on every input, the machine has a unique accepting run, and the output number is found on the work tape, in binary",
                "disabled": false,
                "keywords": [
                  "on every input, the machine has a unique accepting run, and the output number is found on the work tape, in binary"
                ],
                "eventId": "3"
              },
              {
                "type": "child",
                "name": "Counting reachability in NL",
                "id": "128:856",
                "children": [
                  {
                    "type": "show",
                    "id": "132:179",
                    "name": "r[d] := 1",
                    "disabled": false,
                    "keywords": [
                      "r[d] := 1",
                      "d := 0",
                      "r[d] is the number of vertices that can be reached from the source, using a path with at most d edges."
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "133:784",
                    "name": "repeat",
                    "disabled": false,
                    "keywords": [
                      "until r[d] = r[d-1]",
                      "repeat"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "128:897",
                    "name": "d := d+1",
                    "disabled": false,
                    "keywords": [
                      "d := d+1"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "128:869",
                    "name": "r[d] := 0",
                    "disabled": false,
                    "keywords": [
                      "r[d] := 0"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "133:785",
                    "name": "for v",
                    "disabled": false,
                    "keywords": [
                      "for v in vertices",
                      "we want to check if v is reachable by a path of at most d edges",
                      "for v"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "128:870",
                    "name": "i := 0",
                    "disabled": false,
                    "keywords": [
                      "i := 0"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "133:790",
                    "name": "for u in vertices",
                    "disabled": false,
                    "keywords": [
                      "for u in vertices"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "133:787",
                    "name": "guesses if the vertex u is reachable via a path of at most d–1 edges. If the guess is wrong, the program will eventually fail.",
                    "disabled": false,
                    "keywords": [
                      "guesses if the vertex u is reachable via a path of at most d–1 edges. If the guess is wrong, the program will eventually fail.",
                      "guess x ∈ {true, false}"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "133:791",
                    "name": "if x then",
                    "disabled": false,
                    "keywords": [
                      "if x then"
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "show",
                    "id": "133:788",
                    "name": "a subroutine that can be done in nondeterministic logspace",
                    "disabled": false,
                    "keywords": [
                      "assert Reachable(s,u,d-1)",
                      "a subroutine that can be done in nondeterministic logspace"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "show",
                    "id": "128:911",
                    "name": "if there was an incorrect “true” guess, then this will fail",
                    "disabled": false,
                    "keywords": [
                      "if there was an incorrect “true” guess, then this will fail"
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "show",
                    "id": "128:862",
                    "name": "i := i+1",
                    "disabled": false,
                    "keywords": [
                      "i := i+1"
                    ],
                    "eventId": "11"
                  },
                  {
                    "type": "show",
                    "id": "133:792",
                    "name": "if Edge(u,v) then",
                    "disabled": false,
                    "keywords": [
                      "if Edge(u,v) then"
                    ],
                    "eventId": "12"
                  },
                  {
                    "type": "show",
                    "id": "128:873",
                    "name": "r[d] := r[d] + 1",
                    "disabled": false,
                    "keywords": [
                      "r[d] := r[d] + 1"
                    ],
                    "eventId": "13"
                  },
                  {
                    "type": "show",
                    "id": "128:875",
                    "name": "break",
                    "disabled": false,
                    "keywords": [
                      "break"
                    ],
                    "eventId": "14"
                  },
                  {
                    "type": "show",
                    "id": "133:789",
                    "name": "if there was an incorrect “false” guess, then this will fail",
                    "disabled": false,
                    "keywords": [
                      "if there was an incorrect “false” guess, then this will fail",
                      "assert i = r[d-1]"
                    ],
                    "eventId": "15"
                  }
                ],
                "keywords": [
                  "Counting reachability in NL"
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "128:913",
                "name": "Consider a language L, whose complement is recognised by a nondeterministic logspace Turing machine M.",
                "disabled": false,
                "keywords": [
                  "Consider a language L, whose complement is recognised by a nondeterministic logspace Turing machine M."
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "128:918",
                "name": "Run the counting algorithm twice:",
                "disabled": false,
                "keywords": [
                  "Run the counting algorithm twice:"
                ],
                "eventId": "6"
              },
              {
                "type": "show",
                "id": "128:916",
                "name": "(1) on the graph of configurations of M",
                "disabled": false,
                "keywords": [
                  "(1) on the graph of configurations of M"
                ],
                "eventId": "7"
              },
              {
                "type": "show",
                "id": "128:914",
                "name": "(2) on the graph of configurations of M, with accepting configurations removed",
                "disabled": false,
                "keywords": [
                  "(2) on the graph of configurations of M, with accepting configurations removed"
                ],
                "eventId": "8"
              },
              {
                "type": "show",
                "id": "128:919",
                "name": "If the results are equal (i.e. M rejects), then accept, otherwise reject.",
                "disabled": false,
                "keywords": [
                  "If the results are equal (i.e. M rejects), then accept, otherwise reject."
                ],
                "eventId": "9"
              }
            ],
            "keywords": [
              "Immerman Szelepcseni"
            ],
            "eventId": "11"
          }
        ],
        "keywords": [
          "Nondeterministic Logspace"
        ],
        "eventId": "17"
      }
    ],
    "keywords": [
      "first slide"
    ],
    "eventId": "root"
  },
  "soundDict": {
    "72:36": {
      "0": 13.704,
      "1": 4.944,
      "2": 2.544,
      "3": 3.216,
      "4": 10.464,
      "5": 25.776,
      "6": 6.096,
      "7": 44.496,
      "8": 8.904,
      "9": 16.656,
      "10": 9.384,
      "11": 13.776,
      "12": 30.336,
      "13": 17.376,
      "14": 8.184,
      "15": 4.896,
      "16": 7.896,
      "17": 2.544,
      "finish": 23.184
    },
    "68:18": {
      "0": 2.736,
      "1": 27.096,
      "2": 13.896,
      "3": 1.176,
      "4": 16.704,
      "5": 11.616,
      "6": 26.976,
      "7": 22.584,
      "finish": 46.584
    },
    "76:258": {
      "0": 2.304,
      "1": 16.704,
      "2": 25.776,
      "3": 3.864,
      "4": 25.824,
      "5": 31.224,
      "6": 17.976,
      "finish": 27.816
    },
    "72:46": {
      "0": 13.104,
      "1": 35.496,
      "2": 39.336,
      "3": 21.984,
      "4": 8.304,
      "5": 19.944,
      "finish": 0.936
    },
    "76:322": {
      "0": 7.176,
      "1": 51.504,
      "2": 46.224,
      "3": 2.304,
      "4": 32.856,
      "5": 31.296,
      "finish": 2.904
    },
    "126:6": {
      "0": 27.816,
      "1": 2.664,
      "2": 13.296,
      "3": 7.176,
      "4": 12.744,
      "finish": 24.096
    },
    "72:44": {
      "0": 3.384,
      "1": 13.296,
      "2": 10.416,
      "3": 36.624,
      "4": 8.184,
      "5": 63.024,
      "6": 8.544,
      "finish": 36.936
    },
    "72:38": {
      "0": 1.824,
      "1": 68.376,
      "2": 6.624,
      "3": 12.144,
      "4": 6.816,
      "5": 21.864,
      "6": 1.896,
      "7": 29.544,
      "8": 4.824,
      "9": 18.816,
      "finish": 0.864
    },
    "126:575": {
      "0": 0.576,
      "1": 4.056,
      "2": 15.576,
      "3": 8.856,
      "4": 22.344,
      "5": 17.064,
      "6": 3.144,
      "7": 26.544,
      "8": 27.456,
      "9": 33.264,
      "10": 19.464,
      "11": 12.144,
      "finish": 7.056
    },
    "72:45": {
      "0": 23.304,
      "1": 45.696,
      "2": 14.016,
      "3": 25.944,
      "finish": 80.736
    },
    "128:926": {
      "0": 1.896,
      "1": 9.696,
      "2": 9.984,
      "3": 9.864,
      "4": 31.584,
      "5": 23.016,
      "6": 40.416,
      "7": 18.336,
      "finish": 10.344
    },
    "126:52": {
      "0": 9.816,
      "1": 6.144,
      "2": 57.576,
      "3": 53.976,
      "4": 24.024,
      "5": 26.064,
      "6": 28.656,
      "7": 6.624,
      "finish": 22.896
    },
    "72:42": {
      "0": 1.224,
      "1": 1.824,
      "2": 11.184,
      "3": 26.136,
      "4": 11.784,
      "5": 8.424,
      "6": 8.376,
      "7": 11.736,
      "8": 17.856,
      "finish": 17.136
    },
    "72:39": {
      "0": 0.336,
      "1": 16.176,
      "2": 39.264,
      "3": 10.464,
      "4": 3.576,
      "5": 6.744,
      "6": 3.456,
      "7": 2.784,
      "8": 6.696,
      "9": 25.056,
      "10": 21.936,
      "11": 16.776,
      "12": 9.336,
      "13": 9.216,
      "finish": 1.296
    },
    "72:43": {
      "0": 1.296,
      "1": 3.864,
      "finish": 5.184
    },
    "72:41": {
      "0": 2.544,
      "1": 40.296,
      "finish": 36.024
    },
    "128:837": {
      "0": 1.344,
      "1": 28.536,
      "2": 16.056,
      "3": 7.896,
      "4": 10.056,
      "finish": 22.464
    },
    "128:844": {
      "0": 3.864,
      "1": 8.616,
      "2": 5.496,
      "3": 25.344,
      "4": 37.416,
      "5": 11.616,
      "6": 13.536,
      "7": 4.896,
      "8": 3.984,
      "9": 10.776,
      "finish": 13.824
    },
    "132:128": {
      "0": 11.136,
      "1": 8.736,
      "2": 6.816,
      "3": 2.304,
      "finish": 12.816
    },
    "128:856": {
      "0": 7.464,
      "1": 30.744,
      "2": 22.584,
      "3": 3.096,
      "4": 11.016,
      "5": 18.816,
      "6": 9.576,
      "7": 4.656,
      "8": 32.424,
      "9": 3.024,
      "10": 57.624,
      "11": 2.136,
      "12": 19.296,
      "13": 6.816,
      "14": 12.096,
      "15": 7.416,
      "finish": 71.136
    },
    "216:51": {
      "0": 5.976,
      "1": 34.944,
      "2": 50.616,
      "finish": 0.384
    }
  }
}