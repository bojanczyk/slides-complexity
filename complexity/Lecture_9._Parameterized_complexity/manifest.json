{
  "version": 0.902,
  "presentation": "Lecture 9. Parameterized complexity",
  "slideDict": {
    "1:2": "First_slide",
    "1:6": "Vertex_cover",
    "2:0": "Vertex_cover_is_NP_complete",
    "7:96": "NP_completeness_of_vertex_cover",
    "11:18": "fixed_k",
    "11:25": "FPT_for_vertex_cover",
    "11:203": "ETH_Vertex_cover",
    "11:160": "FPT",
    "13:31": "Clique",
    "13:54": "From_k-clique_to_automata",
    "15:10": "Treewidth",
    "15:18": "Treewidthx",
    "15:290": "A_tree_decomposition",
    "21:0": "Bodlaender",
    "21:226": "Use_tree_decomposition",
    "25:2": "FPT_reductions",
    "25:17": "From_Turing_to_clique",
    "26:128": "From_Turing_to_clique_2",
    "34:1": "Noncomputable"
  },
  "tree": {
    "type": "child",
    "name": "First slide",
    "id": "1:2",
    "merged": false,
    "children": [
      {
        "type": "show",
        "id": "24:2",
        "name": "Idea. So far, we measured the complexity of an algorithm as f (input size)?",
        "disabled": false,
        "keywords": [
          "Idea. So far, we measured the complexity of an algorithm as f (input size)?"
        ],
        "eventId": "0"
      },
      {
        "type": "show",
        "id": "24:3",
        "name": "What if there were other parameters: f (input size, some other parameter)?",
        "disabled": false,
        "keywords": [
          "What if there were other parameters: f (input size, some other parameter)?"
        ],
        "eventId": "1"
      },
      {
        "type": "show",
        "id": "24:4",
        "name": "graph size",
        "disabled": false,
        "keywords": [
          "graph size"
        ],
        "eventId": "2"
      },
      {
        "type": "show",
        "id": "24:5",
        "name": "number of colours",
        "disabled": false,
        "keywords": [
          "number of colours"
        ],
        "eventId": "3"
      },
      {
        "type": "child",
        "name": "Vertex cover",
        "id": "1:6",
        "children": [
          {
            "type": "show",
            "id": "21:333",
            "name": "A vertex cover for a graph is a set of vertices which is incident with every edge.",
            "disabled": false,
            "keywords": [
              "A vertex cover for a graph is a set of vertices which is incident with every edge.",
              "not a vertex cover, because this edge is not covered",
              "a vertex cover"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "1:58",
            "name": "The following problem is NP-complete: Input. A graph and a number k. Question. Is there a vertex cover of size ≤ k?",
            "disabled": false,
            "keywords": [
              "The following problem is NP-complete: Input. A graph and a number k. Question. Is there a vertex cover of size ≤ k?"
            ],
            "eventId": "1"
          },
          {
            "type": "child",
            "name": "Vertex cover is NP complete",
            "id": "2:0",
            "children": [
              {
                "type": "show",
                "id": "7:98",
                "name": "Proof. A reduction from 3-CNF-SAT",
                "disabled": false,
                "keywords": [
                  "Proof. A reduction from 3-CNF-SAT"
                ],
                "eventId": "0"
              },
              {
                "type": "child",
                "name": "NP completeness of vertex cover",
                "id": "7:96",
                "children": [
                  {
                    "type": "show",
                    "id": "11:12",
                    "name": "Consider an instance of 3-CNF-SAT",
                    "disabled": false,
                    "keywords": [
                      "Consider an instance of 3-CNF-SAT",
                      "(¬a ∨ ¬b ∨ ¬c) ∧ (¬a ∨ b ∨ ¬c) ∧ (¬a ∨ ¬b ∨ c) ∧ (a ∨ b ∨ c)"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "7:91",
                    "name": "¬a",
                    "disabled": false,
                    "keywords": [
                      "¬a",
                      "¬b",
                      "¬c",
                      "b",
                      "c",
                      "a"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "7:92",
                    "name": "for every clause there is a triangle",
                    "disabled": false,
                    "keywords": [
                      "for every clause there is a triangle"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "7:90",
                    "name": "a",
                    "disabled": false,
                    "keywords": [
                      "a",
                      "¬a",
                      "b",
                      "¬b",
                      "c",
                      "¬c"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "7:94",
                    "name": "for every variable we create an edge",
                    "disabled": false,
                    "keywords": [
                      "for every variable we create an edge"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "7:89",
                    "name": "Group 10",
                    "disabled": false,
                    "keywords": [
                      "Group 10"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "7:95",
                    "name": "edges connect appearances of a variable",
                    "disabled": false,
                    "keywords": [
                      "edges connect appearances of a variable"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "hide",
                    "id": "7:92",
                    "name": "for every clause there is a triangle",
                    "disabled": false,
                    "keywords": [
                      "for every clause there is a triangle"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "hide",
                    "id": "7:95",
                    "name": "edges connect appearances of a variable",
                    "disabled": false,
                    "keywords": [
                      "edges connect appearances of a variable"
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "hide",
                    "id": "7:94",
                    "name": "for every variable we create an edge",
                    "disabled": false,
                    "keywords": [
                      "for every variable we create an edge"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "show",
                    "id": "11:14",
                    "name": "formula is satisfiable",
                    "disabled": false,
                    "keywords": [
                      "formula is satisfiable",
                      "graph has a vertex cover of size ≤ number of variables + 2(number of clauses)",
                      "iff"
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "show",
                    "id": "11:9",
                    "name": "⟹",
                    "disabled": false,
                    "keywords": [
                      "⟹"
                    ],
                    "eventId": "11"
                  },
                  {
                    "type": "show",
                    "id": "7:100",
                    "name": "Take a satisfying assignment, and select for each variable the corresponding vertex in each blue edge.",
                    "disabled": false,
                    "keywords": [
                      "Take a satisfying assignment, and select for each variable the corresponding vertex in each blue edge."
                    ],
                    "eventId": "12"
                  },
                  {
                    "type": "show",
                    "id": "11:11",
                    "name": "Group 13",
                    "disabled": false,
                    "keywords": [
                      "Group 13"
                    ],
                    "eventId": "13"
                  },
                  {
                    "type": "show",
                    "id": "11:6",
                    "name": "In every triangle, some vertex has its red edge covered.",
                    "disabled": false,
                    "keywords": [
                      "In every triangle, some vertex has its red edge covered."
                    ],
                    "eventId": "14"
                  },
                  {
                    "type": "show",
                    "id": "11:7",
                    "name": "Select the remaining two vertices.",
                    "disabled": false,
                    "keywords": [
                      "Select the remaining two vertices."
                    ],
                    "eventId": "15"
                  },
                  {
                    "type": "hide",
                    "id": "11:11",
                    "name": "Group 13",
                    "disabled": false,
                    "keywords": [
                      "Group 13"
                    ],
                    "eventId": "16"
                  },
                  {
                    "type": "show",
                    "id": "11:8",
                    "name": "⟹",
                    "disabled": false,
                    "keywords": [
                      "⟹"
                    ],
                    "eventId": "17"
                  },
                  {
                    "type": "show",
                    "id": "11:0",
                    "name": "At least one vertex must be selected for each blue edge",
                    "disabled": false,
                    "keywords": [
                      "At least one vertex must be selected for each blue edge"
                    ],
                    "eventId": "18"
                  },
                  {
                    "type": "show",
                    "id": "11:1",
                    "name": "At least two vertices must be selected for each triangle",
                    "disabled": false,
                    "keywords": [
                      "At least two vertices must be selected for each triangle"
                    ],
                    "eventId": "19"
                  },
                  {
                    "type": "show",
                    "id": "7:101",
                    "name": "A vertex cover of this size needs exactly: 1. one vertex per blue edge, 2. two vertices per black triangle",
                    "disabled": false,
                    "keywords": [
                      "A vertex cover of this size needs exactly: 1. one vertex per blue edge, 2. two vertices per black triangle"
                    ],
                    "eventId": "20"
                  },
                  {
                    "type": "show",
                    "id": "8:2",
                    "name": "To be a cover, it needs to describe a satisfying assignment.",
                    "disabled": false,
                    "keywords": [
                      "To be a cover, it needs to describe a satisfying assignment."
                    ],
                    "eventId": "21"
                  }
                ],
                "keywords": [
                  "NP completeness of vertex cover"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "11:15",
                "name": "linear",
                "disabled": false,
                "keywords": [
                  "linear"
                ],
                "eventId": "2"
              }
            ],
            "keywords": [
              "Vertex cover is NP complete"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "11:17",
            "name": "What about fixed k?",
            "disabled": false,
            "keywords": [
              "What about fixed k?"
            ],
            "eventId": "3"
          },
          {
            "type": "child",
            "name": "fixed k",
            "id": "11:18",
            "children": [
              {
                "type": "show",
                "id": "21:329",
                "name": "Algorithm 1. Search all subsets of size ≤ k",
                "disabled": false,
                "keywords": [
                  "Algorithm 1. Search all subsets of size ≤ k",
                  "Running time:",
                  "(number of edges) × (number of vertices)",
                  "k"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "11:153",
                "name": "Polynomial for fixed k, but the polynomial and its degree depend on k",
                "disabled": false,
                "keywords": [
                  "Polynomial for fixed k, but the polynomial and its degree depend on k"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "21:330",
                "name": "Algorithm 2.",
                "disabled": false,
                "keywords": [
                  "Algorithm 2.",
                  "Running time:",
                  "2 × (number of edges)",
                  "k"
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "11:158",
                "name": "Polynomial for fixed k, and degree of polynomial does not depend on k",
                "disabled": false,
                "keywords": [
                  "Polynomial for fixed k, and degree of polynomial does not depend on k"
                ],
                "eventId": "3"
              },
              {
                "type": "child",
                "name": "FPT for vertex cover",
                "id": "11:25",
                "children": [
                  {
                    "type": "show",
                    "id": "11:149",
                    "name": "An algorithm that runs in time",
                    "disabled": false,
                    "keywords": [
                      "An algorithm that runs in time"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "11:148",
                    "name": "linear time for fixed k",
                    "disabled": false,
                    "keywords": [
                      "linear time for fixed k"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "11:88",
                    "name": "?",
                    "disabled": false,
                    "keywords": [
                      "?",
                      "yes",
                      "no",
                      "During the algorithm, we will increase knowledge about the vertex cover"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "11:87",
                    "name": "?",
                    "disabled": false,
                    "keywords": [
                      "?",
                      "Initially, all vertices are undecided"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "hide",
                    "id": "11:87",
                    "name": "?",
                    "disabled": false,
                    "keywords": [
                      "?"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "11:89",
                    "name": "Recursive procedure",
                    "disabled": false,
                    "keywords": [
                      "Recursive procedure"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "11:150",
                    "name": "If k vertices are “yes” then stop.",
                    "disabled": false,
                    "keywords": [
                      "If k vertices are “yes” then stop.",
                      "with failure or success, depending on whether we have a cover)."
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "11:151",
                    "name": "Take the first undecided vertex v .",
                    "disabled": false,
                    "keywords": [
                      "Take the first undecided vertex v .",
                      "with respect to some fixed order on the vertices"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "44:1",
                    "name": "If all neighbours of v are decided, make v “yes” if it has some “no” neighbour, and “no” otherwise. Try the next v.",
                    "disabled": false,
                    "keywords": [
                      "If all neighbours of v are decided, make v “yes” if it has some “no” neighbour, and “no” otherwise. Try the next v."
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "show",
                    "id": "44:3",
                    "name": "If all neighbours of v are decided, make v “yes” if it has some “no” neighbour, and “no” otherwise. Try the next v.",
                    "disabled": false,
                    "keywords": [
                      "If all neighbours of v are decided, make v “yes” if it has some “no” neighbour, and “no” otherwise. Try the next v."
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "show",
                    "id": "11:49",
                    "name": "Succeed if one of the following succeds:",
                    "disabled": false,
                    "keywords": [
                      "Succeed if one of the following succeds:"
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "show",
                    "id": "11:81",
                    "name": "1. set v to “yes”, and recurse",
                    "disabled": false,
                    "keywords": [
                      "1. set v to “yes”, and recurse"
                    ],
                    "eventId": "11"
                  },
                  {
                    "type": "show",
                    "id": "11:82",
                    "name": "2. set v to “no”, set all of its undecided neighbours to “yes”, and recurse",
                    "disabled": false,
                    "keywords": [
                      "2. set v to “no”, set all of its undecided neighbours to “yes”, and recurse"
                    ],
                    "eventId": "12"
                  },
                  {
                    "type": "show",
                    "id": "11:152",
                    "name": "The recursion tree is a binary tree of depth at most k",
                    "disabled": false,
                    "keywords": [
                      "The recursion tree is a binary tree of depth at most k"
                    ],
                    "eventId": "13"
                  }
                ],
                "keywords": [
                  "FPT for vertex cover"
                ],
                "eventId": "4"
              },
              {
                "type": "show",
                "id": "11:205",
                "name": "Under the Exponential Time Hypothesis, algorithm 2 is optimal.",
                "disabled": false,
                "keywords": [
                  "Under the Exponential Time Hypothesis, algorithm 2 is optimal."
                ],
                "eventId": "5"
              },
              {
                "type": "child",
                "name": "ETH Vertex cover",
                "id": "11:203",
                "children": [
                  {
                    "type": "show",
                    "id": "21:307",
                    "name": "Exponential Time Hypothesis",
                    "disabled": false,
                    "keywords": [
                      "Exponential Time Hypothesis",
                      "Optimality of Algorithm 2",
                      "⟹"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "21:308",
                    "name": "eth",
                    "disabled": false,
                    "keywords": [
                      "2",
                      "λ(number of clauses)",
                      "For some λ > 0, there is no algorithm for 3-CNF-SAT which works in time",
                      "eth"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "21:309",
                    "name": "algo 1",
                    "disabled": false,
                    "keywords": [
                      "2",
                      "λ(size of vertex cover)",
                      "× poly(number of vertices)",
                      "For some λ > 0, there is no algorithm for vertex cover which works in time",
                      "algo 1"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "hide",
                    "id": "21:308",
                    "name": "eth",
                    "disabled": false,
                    "keywords": [
                      "eth"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "hide",
                    "id": "21:309",
                    "name": "algo 1",
                    "disabled": false,
                    "keywords": [
                      "algo 1"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "21:319",
                    "name": "contrapositive",
                    "disabled": false,
                    "keywords": [
                      "2",
                      "λ(number of clauses)",
                      "λ(size of vertex cover)",
                      "× poly(number of vertices)",
                      "For every λ > 0, there is an algorithm for 3-CNF-SAT which works in time",
                      "For every λ > 0, there is an algorithm for vertex cover which works in time",
                      "⟹",
                      "contrapositive"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "11:216",
                    "name": "Proof. Our reduction from 3-CNF-SAT to vertex cover created an instance where both the number of vertices and cover size are ≤ 2(number of clauses).",
                    "disabled": false,
                    "keywords": [
                      "Proof. Our reduction from 3-CNF-SAT to vertex cover created an instance where both the number of vertices and cover size are ≤ 2(number of clauses)."
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "21:328",
                    "name": "2",
                    "disabled": false,
                    "keywords": [
                      "2",
                      "2λ(number of clauses)",
                      "× poly(number of clauses)",
                      "Using an alleged vertex cover algorithm for λ, we can solve 3-CNF-SAT in time"
                    ],
                    "eventId": "7"
                  }
                ],
                "keywords": [
                  "ETH Vertex cover"
                ],
                "eventId": "6"
              },
              {
                "type": "show",
                "id": "21:331",
                "name": "This is an example of a fixed parameter tractable algorithm.",
                "disabled": false,
                "keywords": [
                  "This is an example of a fixed parameter tractable algorithm."
                ],
                "eventId": "7"
              },
              {
                "type": "child",
                "name": "FPT",
                "id": "11:160",
                "children": [
                  {
                    "type": "show",
                    "id": "21:305",
                    "name": "Consider a computational problem, where each instance has two associated numbers: size and parameter.",
                    "disabled": false,
                    "keywords": [
                      "Consider a computational problem, where each input has two associated numbers: size and parameter.",
                      "Fixed parameter tractable",
                      "Consider a computational problem, where each instance has two associated numbers: size and parameter."
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "34:0",
                    "name": "formally: L ⊆ Σ* × {1, 2, ...}",
                    "disabled": false,
                    "keywords": [
                      "formally: L ⊆ Σ* × {1, 2, ...}"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "21:298",
                    "name": "Can a graph with n vertices be coloured by k colours?",
                    "disabled": false,
                    "keywords": [
                      "Can a graph with n vertices be coloured by k colours?",
                      "size of graph",
                      "number of colours k",
                      "problem",
                      "size",
                      "parameter"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "21:299",
                    "name": "Is a k-CNF formula satisfiable?",
                    "disabled": false,
                    "keywords": [
                      "Is a k-CNF formula satisfiable?",
                      "size of formula",
                      "size k of clauses"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "21:300",
                    "name": "Does a graph of size n have a vertex cover of size ≤ k?",
                    "disabled": false,
                    "keywords": [
                      "Does a graph of size n have a vertex cover of size ≤ k?",
                      "size of graph",
                      "size k of vertex cover"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "21:301",
                    "name": "Does a graph of size n contain a clique of size ≤ k?",
                    "disabled": false,
                    "keywords": [
                      "Does a graph of size n contain a clique of size ≤ k?",
                      "size of graph",
                      "size k of clique"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "21:306",
                    "name": "The problem is fixed parameter tractable if it can be solved in time",
                    "disabled": false,
                    "keywords": [
                      "A problem is fixed parameter tractable if it can be solved in time",
                      "f (parameter) × p(size)",
                      "computable function",
                      "a polynomial",
                      "The problem is fixed parameter tractable if it can be solved in time"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "11:188",
                    "name": "fpt?",
                    "disabled": false,
                    "keywords": [
                      "fpt?"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "21:303",
                    "name": "no*",
                    "disabled": false,
                    "keywords": [
                      "no*",
                      "* assuming P ≠ NP"
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "show",
                    "id": "11:194",
                    "name": "no*",
                    "disabled": false,
                    "keywords": [
                      "no*"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "show",
                    "id": "11:195",
                    "name": "yes",
                    "disabled": false,
                    "keywords": [
                      "yes"
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "show",
                    "id": "21:304",
                    "name": "no**",
                    "disabled": false,
                    "keywords": [
                      "no**",
                      "** assuming a stronger conjecture"
                    ],
                    "eventId": "11"
                  }
                ],
                "keywords": [
                  "FPT"
                ],
                "eventId": "8"
              },
              {
                "type": "child",
                "name": "Treewidth",
                "id": "15:10",
                "children": [
                  {
                    "type": "show",
                    "id": "15:12",
                    "name": "Many hard problems are easy on graphs similar to trees.",
                    "disabled": false,
                    "keywords": [
                      "Many hard problems are easy on graphs similar to trees."
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "15:13",
                    "name": "3-colourability",
                    "disabled": false,
                    "keywords": [
                      "3-colourability"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "15:14",
                    "name": "Hamiltonian path",
                    "disabled": false,
                    "keywords": [
                      "Hamiltonian path"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "15:15",
                    "name": "Vertex cover",
                    "disabled": false,
                    "keywords": [
                      "Vertex cover"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "15:16",
                    "name": "FPT when the parameter is treewidth",
                    "disabled": false,
                    "keywords": [
                      "FPT when the parameter is treewidth"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "child",
                    "name": "Treewidth",
                    "id": "15:18",
                    "children": [
                      {
                        "type": "show",
                        "id": "15:21",
                        "name": "A graph with ports is a graph with distinguished distinguished vertices.",
                        "disabled": false,
                        "keywords": [
                          "A graph with ports is a graph with distinguished distinguished vertices."
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "20:32",
                        "name": "ports",
                        "disabled": false,
                        "keywords": [
                          "ports"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "15:20",
                        "name": "Definition. A graph has treewidth k ∈ {1,2, ...} if it can be constructed using the following operations, so that in every moment at most k+1 ports are used.",
                        "disabled": false,
                        "keywords": [
                          "Definition. A graph has treewidth k ∈ {1,2, ...} if it can be constructed using the following operations, so that in every moment at most k+1 ports are used."
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "hide",
                        "id": "20:32",
                        "name": "ports",
                        "disabled": false,
                        "keywords": [
                          "ports"
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "20:33",
                        "name": "Constant",
                        "disabled": false,
                        "keywords": [
                          "Constant",
                          "We have a constant for every graph where all vertices are distinguished."
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "20:34",
                        "name": "Forget",
                        "disabled": false,
                        "keywords": [
                          "Forget",
                          "Input: a graph with ports, and a chosen port"
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "20:35",
                        "name": "Output: the chosen port is no longer a port",
                        "disabled": false,
                        "keywords": [
                          "Output: the chosen port is no longer a port"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "20:36",
                        "name": "Fuse",
                        "disabled": false,
                        "keywords": [
                          "Fuse",
                          "Input: two graphs with ports, and a partial bijection between the ports",
                          "bijection"
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "20:37",
                        "name": "Output: the disjoint union, except that pairs from the bijection are fused",
                        "disabled": false,
                        "keywords": [
                          "Output: the disjoint union, except that pairs from the bijection are fused"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "child",
                        "name": "A tree decomposition",
                        "id": "15:290",
                        "children": [
                          {
                            "type": "show",
                            "id": "15:515",
                            "name": "The 8-cycle has treewidth 2, because it can be constructed using 3 ports.",
                            "disabled": false,
                            "keywords": [
                              "The 8-cycle has treewidth 2, because it can be constructed using 3 ports."
                            ],
                            "eventId": "0"
                          },
                          {
                            "type": "show",
                            "id": "20:38",
                            "name": "Group 39",
                            "disabled": false,
                            "keywords": [
                              "Group 39"
                            ],
                            "eventId": "1"
                          },
                          {
                            "type": "show",
                            "id": "20:39",
                            "name": "Group 40",
                            "disabled": false,
                            "keywords": [
                              "Group 40"
                            ],
                            "eventId": "2"
                          },
                          {
                            "type": "show",
                            "id": "20:40",
                            "name": "Group 41",
                            "disabled": false,
                            "keywords": [
                              "Group 41"
                            ],
                            "eventId": "3"
                          },
                          {
                            "type": "show",
                            "id": "20:42",
                            "name": "Group 43",
                            "disabled": false,
                            "keywords": [
                              "Group 43"
                            ],
                            "eventId": "4"
                          },
                          {
                            "type": "show",
                            "id": "20:43",
                            "name": "Group 44",
                            "disabled": false,
                            "keywords": [
                              "Group 44"
                            ],
                            "eventId": "5"
                          },
                          {
                            "type": "show",
                            "id": "20:44",
                            "name": "Group 45",
                            "disabled": false,
                            "keywords": [
                              "Group 45"
                            ],
                            "eventId": "6"
                          },
                          {
                            "type": "show",
                            "id": "20:45",
                            "name": "Group 46",
                            "disabled": false,
                            "keywords": [
                              "Group 46"
                            ],
                            "eventId": "7"
                          },
                          {
                            "type": "show",
                            "id": "20:46",
                            "name": "Group 47",
                            "disabled": false,
                            "keywords": [
                              "Group 47"
                            ],
                            "eventId": "8"
                          },
                          {
                            "type": "show",
                            "id": "20:47",
                            "name": "Group 48",
                            "disabled": false,
                            "keywords": [
                              "Group 48"
                            ],
                            "eventId": "9"
                          },
                          {
                            "type": "show",
                            "id": "20:48",
                            "name": "Group 49",
                            "disabled": false,
                            "keywords": [
                              "Group 49"
                            ],
                            "eventId": "10"
                          },
                          {
                            "type": "show",
                            "id": "20:49",
                            "name": "Group 50",
                            "disabled": false,
                            "keywords": [
                              "Group 50"
                            ],
                            "eventId": "11"
                          },
                          {
                            "type": "show",
                            "id": "15:516",
                            "name": "All cycles have treewidth 2.",
                            "disabled": false,
                            "keywords": [
                              "All cycles have treewidth 2."
                            ],
                            "eventId": "12"
                          }
                        ],
                        "keywords": [
                          "A tree decomposition"
                        ],
                        "eventId": "9"
                      }
                    ],
                    "keywords": [
                      "Treewidth"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "21:284",
                    "name": "Theorem. 3-colourability can be solved in time",
                    "disabled": false,
                    "keywords": [
                      "Theorem. 3-colourability can be solved in time",
                      "f (treewidth) × (number of vertices)",
                      "exponential"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "50:0",
                    "name": "also linear in number of edges",
                    "disabled": false,
                    "keywords": [
                      "also linear in number of edges"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "21:268",
                    "name": "Step 1. Compute the tree decomposition",
                    "disabled": false,
                    "keywords": [
                      "Step 1. Compute the tree decomposition"
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "child",
                    "name": "Bodlaender",
                    "id": "21:0",
                    "children": [
                      {
                        "type": "show",
                        "id": "21:285",
                        "name": "Theorem. Bodlander Given k ∈ {1, 2, ...} and a graph, one can compute a width k tree decomposition, or say that one does not exist, in time",
                        "disabled": false,
                        "keywords": [
                          "Theorem. Bodlander Given k ∈ {1, 2, ...} and a graph, one can compute a width k tree decomposition, or say that one does not exist, in time",
                          "f (k) × (number of vertices)."
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "21:4",
                        "name": "exponential",
                        "disabled": false,
                        "keywords": [
                          "exponential"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "21:222",
                        "name": "for graphs of treewidth k, number of edges ≤ (k+1)2 × (number of vertices)",
                        "disabled": false,
                        "keywords": [
                          "for graphs of treewidth k, number of edges ≤ (k+1)2 × (number of vertices)"
                        ],
                        "eventId": "2"
                      }
                    ],
                    "keywords": [
                      "Bodlaender"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "show",
                    "id": "21:269",
                    "name": "Step 2. Check 3-colourability using a bottom-up pass on the tree decomposition.",
                    "disabled": false,
                    "keywords": [
                      "Step 2. Check 3-colourability using a bottom-up pass on the tree decomposition."
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "child",
                    "name": "Use tree decomposition",
                    "id": "21:226",
                    "children": [
                      {
                        "type": "show",
                        "id": "21:286",
                        "name": "Group 51",
                        "disabled": false,
                        "keywords": [
                          "Group 51"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "21:289",
                        "name": "Consider a node of the tree decomposition, which describes a graph with ports.",
                        "disabled": false,
                        "keywords": [
                          "Consider a node of the tree decomposition, which describes a graph with ports."
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "21:290",
                        "name": "The signature of this node is the set of all colourings",
                        "disabled": false,
                        "keywords": [
                          "The signature of this node is the set of all colourings",
                          "λ : ports ⟶ {1, 2, 3}",
                          "which can be extended to a 3-colouring of the entire graph with ports."
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "21:291",
                        "name": "Fact. The signature of a node can be computed from the signatures of its children, in time",
                        "disabled": false,
                        "keywords": [
                          "Fact. The signature of a node can be computed from the signatures of its children, in time"
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "21:265",
                        "name": "Constant: exhaustive search",
                        "disabled": false,
                        "keywords": [
                          "Constant: exhaustive search"
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "21:266",
                        "name": "Forget: restrict the signature to smaller set",
                        "disabled": false,
                        "keywords": [
                          "Forget: restrict the signature to smaller set"
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "21:267",
                        "name": "Fusion: interserction of signatures",
                        "disabled": false,
                        "keywords": [
                          "Fusion: interserction of signatures"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "21:292",
                        "name": "Corollary. The signature of the root node can be computed in time",
                        "disabled": false,
                        "keywords": [
                          "Corollary. The signature of the root node can be computed in time",
                          "(size of tree decomposition) ×"
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "21:264",
                        "name": "linear in the number of vertices",
                        "disabled": false,
                        "keywords": [
                          "linear in the number of vertices"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "show",
                        "id": "21:263",
                        "name": "The graph is 3-colourable iff the signature of the root node is nonempty.",
                        "disabled": false,
                        "keywords": [
                          "The graph is 3-colourable iff the signature of the root node is nonempty."
                        ],
                        "eventId": "9"
                      }
                    ],
                    "keywords": [
                      "Use tree decomposition"
                    ],
                    "eventId": "11"
                  },
                  {
                    "type": "show",
                    "id": "21:282",
                    "name": "Theorem. Courcelle This proof works for every problem that can be formalised in monadic second-order logic.",
                    "disabled": false,
                    "keywords": [
                      "Theorem. Courcelle This proof works for every problem that can be formalised in monadic second-order logic."
                    ],
                    "eventId": "12"
                  }
                ],
                "keywords": [
                  "Treewidth"
                ],
                "eventId": "9"
              },
              {
                "type": "show",
                "id": "21:332",
                "name": "This is an example of an XP algorithm.",
                "disabled": false,
                "keywords": [
                  "This is an example of an XP algorithm."
                ],
                "eventId": "10"
              },
              {
                "type": "show",
                "id": "13:27",
                "name": "Between these, there are other complexity classes of parameterised problems.",
                "disabled": false,
                "keywords": [
                  "Between these, there are other complexity classes of parameterised problems."
                ],
                "eventId": "11"
              },
              {
                "type": "child",
                "name": "Clique",
                "id": "13:31",
                "children": [
                  {
                    "type": "show",
                    "id": "21:295",
                    "name": "Problem 1. Given a graph, does it contain a clique of size k?",
                    "disabled": false,
                    "keywords": [
                      "Problem 1. Given a graph, does it contain a clique of size k?",
                      "parameter"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "13:52",
                    "name": "Conjecture: Problem 1 is not in FPT",
                    "disabled": false,
                    "keywords": [
                      "Conjecture: Problem 1 is not in FPT"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "21:296",
                    "name": "Problem 2. Given k nondeterministic automata, is there some word accepted by all of them?",
                    "disabled": false,
                    "keywords": [
                      "Problem 2. Given a nondeterministic Turing machine, does it have an accepting computation of length k?",
                      "parameter",
                      "Problem 2. Given k nondeterministic automata, is there some word accepted by all of them?"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "13:53",
                    "name": "Lemma: If Problem 2 is FPT, then so is Problem 1.",
                    "disabled": false,
                    "keywords": [
                      "Lemma: If Problem 2 is FPT, then so is Problem 1."
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "child",
                    "name": "From k-clique to automata",
                    "id": "13:54",
                    "children": [
                      {
                        "type": "show",
                        "id": "13:56",
                        "name": "Given a graph, we want to know if it contains a clique of size k.",
                        "disabled": false,
                        "keywords": [
                          "Given a graph, we want to know if it contains a clique of size k."
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "27:36",
                        "name": "We will define a Turing machine of size O(vertices3) such that:",
                        "disabled": false,
                        "keywords": [
                          "We will define a Turing machine of size O(vertices3) such that:"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "27:37",
                        "name": "The graph has a clique of size k",
                        "disabled": false,
                        "keywords": [
                          "The graph has a clique of size k"
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "27:38",
                        "name": "iff",
                        "disabled": false,
                        "keywords": [
                          "iff"
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "27:39",
                        "name": "The Turing machine has an accepting computation of length ≤ k3",
                        "disabled": false,
                        "keywords": [
                          "The Turing machine has an accepting computation of length ≤ k3"
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "15:5",
                        "name": "We define k automata over the alphabet of vertices as follows.",
                        "disabled": false,
                        "keywords": [
                          "We define k automata over the alphabet of vertices as follows."
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "27:7",
                        "name": "for every i < j ∈ {1,.., k}, the i-th and j-th letters in the input word describe an edge in the graph",
                        "disabled": false,
                        "keywords": [
                          "for every i < j ∈ {1,.., k}, the i-th and j-th letters in the input word describe an edge in the graph"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "27:5",
                        "name": "time k3",
                        "disabled": false,
                        "keywords": [
                          "time k3"
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "28:21",
                        "name": "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                        "disabled": false,
                        "keywords": [
                          "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                          "f (k) × p(Turing machine size)"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "show",
                        "id": "28:10",
                        "name": "⟹",
                        "disabled": false,
                        "keywords": [
                          "⟹"
                        ],
                        "eventId": "9"
                      },
                      {
                        "type": "show",
                        "id": "28:22",
                        "name": "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                        "disabled": false,
                        "keywords": [
                          "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                          "f (k3) × p(vertices3)"
                        ],
                        "eventId": "10"
                      },
                      {
                        "type": "show",
                        "id": "27:41",
                        "name": "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                        "disabled": false,
                        "keywords": [
                          "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique."
                        ],
                        "eventId": "11"
                      },
                      {
                        "type": "show",
                        "id": "28:11",
                        "name": "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique.",
                        "disabled": false,
                        "keywords": [
                          "If there would be an FPT algorithm for interesection of k automata, then the same would be true for k-clique."
                        ],
                        "eventId": "12"
                      }
                    ],
                    "keywords": [
                      "f (k) × p(Turing machine size)",
                      "From k-clique to automata"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "21:297",
                    "name": "An FPT reduction is a function from instances of Problem 1 to instances of Problem 2",
                    "disabled": false,
                    "keywords": [
                      "An FPT reduction is a function from instances of Problem 1 to instances of Problem 2",
                      "instances of Problem 1",
                      "instances of Problem 2"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "13:50",
                    "name": "It is designed so that if Problem 2 is in FPT, then so is Problem 1",
                    "disabled": false,
                    "keywords": [
                      "It is designed so that if Problem 2 is in FPT, then so is Problem 1"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "13:45",
                    "name": "(a) output parameter: depends (computably) on input parameter",
                    "disabled": false,
                    "keywords": [
                      "(a) output parameter: depends (computably) on input parameter"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "13:51",
                    "name": "(output parameter does not depend on instance)",
                    "disabled": false,
                    "keywords": [
                      "(output parameter does not depend on instance)"
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "show",
                    "id": "13:46",
                    "name": "(b) output size: FPT in terms of input size",
                    "disabled": false,
                    "keywords": [
                      "(b) output size: FPT in terms of input size"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "child",
                    "name": "FPT reductions",
                    "id": "25:2",
                    "children": [
                      {
                        "type": "show",
                        "id": "28:12",
                        "name": "Examples of FPT reductions",
                        "disabled": false,
                        "keywords": [
                          "Examples of FPT reductions"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "28:24",
                        "name": "Does a graph contain a clique of size k?",
                        "disabled": false,
                        "keywords": [
                          "Does a graph contain a clique of size k?",
                          "Does a Turing machine have an accepting run of length k?",
                          "Already shown: The Turing machine recognises the clique"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "25:12",
                        "name": "Arrow 5",
                        "disabled": false,
                        "keywords": [
                          "Arrow 5"
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "child",
                        "name": "From Turing to clique",
                        "id": "25:17",
                        "children": [
                          {
                            "type": "show",
                            "id": "25:19",
                            "name": "Suppose that we want to know if a nondeterministic Turing machine M has an accepting computation of length k.",
                            "disabled": false,
                            "keywords": [
                              "Suppose that we want to know if a nondeterministic Turing machine M has an accepting computation of length k."
                            ],
                            "eventId": "0"
                          },
                          {
                            "type": "show",
                            "id": "28:29",
                            "name": "problem is equally hard for deterministic",
                            "disabled": false,
                            "keywords": [
                              "problem is equally hard for deterministic"
                            ],
                            "eventId": "1"
                          },
                          {
                            "type": "show",
                            "id": "28:28",
                            "name": "p",
                            "disabled": false,
                            "keywords": [
                              "p",
                              "q",
                              "r",
                              "A computation of length k can be visualised as a k × k grid"
                            ],
                            "eventId": "2"
                          },
                          {
                            "type": "show",
                            "id": "26:119",
                            "name": "The existence of such a computation can be rephrased as the existence of a a clique of size (k – 2) × (k – 1) inside a graph of size poly(M)",
                            "disabled": false,
                            "keywords": [
                              "The existence of such a computation can be rephrased as the existence of a a clique of size (k – 2) × (k – 1) inside a graph of size poly(M)"
                            ],
                            "eventId": "3"
                          },
                          {
                            "type": "child",
                            "name": "From Turing to clique 2",
                            "id": "26:128",
                            "children": [
                              {
                                "type": "show",
                                "id": "28:30",
                                "name": "?",
                                "disabled": false,
                                "keywords": [
                                  "?",
                                  "r",
                                  "q",
                                  "p",
                                  "A window is information about a 3 × 2 rectangle inside the k × k grid, such that:"
                                ],
                                "eventId": "0"
                              },
                              {
                                "type": "show",
                                "id": "26:696",
                                "name": "1. the window is consistent with the transition relation of the Turing machine",
                                "disabled": false,
                                "keywords": [
                                  "1. the window is consistent with the transition relation of the Turing machine"
                                ],
                                "eventId": "1"
                              },
                              {
                                "type": "show",
                                "id": "26:697",
                                "name": "2. if the window covers top-left corner, then the initial state is used there",
                                "disabled": false,
                                "keywords": [
                                  "2. if the window covers top-left corner, then the initial state is used there"
                                ],
                                "eventId": "2"
                              },
                              {
                                "type": "show",
                                "id": "26:698",
                                "name": "3. if the window covers a state in the last line, then that state is accepting",
                                "disabled": false,
                                "keywords": [
                                  "3. if the window covers a state in the last line, then that state is accepting"
                                ],
                                "eventId": "3"
                              },
                              {
                                "type": "show",
                                "id": "28:2",
                                "name": "Graph of windows: vertices are windows, and an edge connects two windows if they are consistent (agree on the overlap).",
                                "disabled": false,
                                "keywords": [
                                  "Graph of windows: vertices are windows, and an edge connects two windows if they are consistent (agree on the overlap)."
                                ],
                                "eventId": "4"
                              },
                              {
                                "type": "show",
                                "id": "28:6",
                                "name": "consistent",
                                "disabled": false,
                                "keywords": [
                                  "consistent"
                                ],
                                "eventId": "5"
                              },
                              {
                                "type": "show",
                                "id": "28:31",
                                "name": "not consistent",
                                "disabled": false,
                                "keywords": [
                                  "not consistent"
                                ],
                                "eventId": "6"
                              },
                              {
                                "type": "show",
                                "id": "26:700",
                                "name": "There is an accepting computation of length k iff The graph of windows contains a clique of size (k – 2) × (k – 1)",
                                "disabled": false,
                                "keywords": [
                                  "There is an accepting computation of length k iff The graph of windows contains a clique of size (k – 2) × (k – 1)"
                                ],
                                "eventId": "7"
                              }
                            ],
                            "keywords": [
                              "From Turing to clique 2"
                            ],
                            "eventId": "4"
                          }
                        ],
                        "keywords": [
                          "From Turing to clique"
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "28:25",
                        "name": "Does a graph have a vertex cover of size k?",
                        "disabled": false,
                        "keywords": [
                          "Does a graph have a vertex cover of size k?",
                          "The Turing machine recognises the vertex cover"
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "28:18",
                        "name": "FPT",
                        "disabled": false,
                        "keywords": [
                          "FPT"
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "28:26",
                        "name": "Does a graph of treewidth k contain a Hamiltonian path?",
                        "disabled": false,
                        "keywords": [
                          "Does a graph of treewidth k contain a Hamiltonian path?",
                          "solve the source problem in FPT, and create a yes/no instance of the target problem"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "28:17",
                        "name": "W[1]",
                        "disabled": false,
                        "keywords": [
                          "W[1]"
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "25:7",
                        "name": "Does a circuit accept some input with exactly k ones?",
                        "disabled": false,
                        "keywords": [
                          "Does a circuit accept some input with exactly k ones?"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "show",
                        "id": "28:27",
                        "name": "Variables of the circuit are vertices",
                        "disabled": false,
                        "keywords": [
                          "Variables of the circuit are vertices"
                        ],
                        "eventId": "9"
                      },
                      {
                        "type": "show",
                        "id": "28:19",
                        "name": "W[P]",
                        "disabled": false,
                        "keywords": [
                          "W[P]"
                        ],
                        "eventId": "10"
                      }
                    ],
                    "keywords": [
                      "FPT reductions"
                    ],
                    "eventId": "10"
                  }
                ],
                "keywords": [
                  "Clique"
                ],
                "eventId": "12"
              }
            ],
            "keywords": [
              "fixed k"
            ],
            "eventId": "4"
          }
        ],
        "keywords": [
          "Vertex cover"
        ],
        "eventId": "4"
      }
    ],
    "keywords": [
      "Computational Complexity",
      "Lecture 1. Turing machines and their resources",
      "First slide"
    ],
    "eventId": "root"
  },
  "soundDict": {
    "1:2": {
      "0": 6.936,
      "1": 19.104,
      "2": 33.216,
      "3": 9.816,
      "4": 37.224,
      "finish": 3.984
    },
    "1:6": {
      "0": 1.464,
      "1": 34.824,
      "2": 30.696,
      "3": 15.264,
      "4": 21.696,
      "finish": 2.376
    },
    "2:0": {
      "0": 2.976,
      "1": 19.224,
      "2": 9.936,
      "finish": 15.456
    },
    "7:96": {
      "0": 1.776,
      "1": 17.016,
      "2": 14.376,
      "3": 1.656,
      "4": 0.984,
      "5": 14.976,
      "6": 36.624,
      "7": 1.536,
      "8": 3.984,
      "9": 0.576,
      "10": 0.384,
      "11": 15.624,
      "12": 5.184,
      "13": 9.864,
      "14": 97.704,
      "15": 3.744,
      "16": 35.736,
      "17": 2.016,
      "18": 10.464,
      "19": 10.464,
      "20": 17.376,
      "21": 30.744,
      "finish": 14.304
    },
    "11:18": {
      "0": 1.344,
      "1": 35.544,
      "2": 24.816,
      "3": 15.696,
      "4": 50.256,
      "5": 4.776,
      "6": 14.976,
      "7": 15.864,
      "8": 28.176,
      "9": 5.544,
      "10": 23.184,
      "11": 22.464,
      "12": 21.384,
      "finish": 2.976
    },
    "11:25": {
      "0": 2.376,
      "1": 1.536,
      "2": 9.264,
      "3": 28.224,
      "4": 8.736,
      "5": 0.936,
      "6": 0.936,
      "7": 24.024,
      "8": 21.096,
      "9": 26.976,
      "10": 31.296,
      "11": 14.016,
      "12": 17.016,
      "13": 8.784,
      "finish": 62.664
    },
    "11:203": {
      "0": 5.064,
      "1": 6.816,
      "2": 45.144,
      "3": 58.824,
      "4": 0.504,
      "5": 0.576,
      "6": 19.656,
      "7": 28.776,
      "finish": 40.704
    },
    "11:160": {
      "0": 2.976,
      "1": 34.296,
      "2": 43.104,
      "3": 24.096,
      "4": 52.776,
      "5": 12.336,
      "6": 22.344,
      "7": 36.384,
      "8": 21.696,
      "9": 15.456,
      "10": 23.016,
      "11": 6.936,
      "12": 59.544,
      "finish": 1.896
    },
    "15:10": {
      "0": 8.064,
      "1": 11.184,
      "2": 8.376,
      "3": 3.384,
      "4": 8.256,
      "5": 12.384,
      "6": 17.016,
      "7": 16.896,
      "8": 19.824,
      "9": 11.304,
      "10": 18.984,
      "11": 15.264,
      "12": 32.184,
      "finish": 56.304
    },
    "15:18": {
      "0": 14.616,
      "1": 4.464,
      "2": 4.584,
      "3": 21.096,
      "5": 22.416,
      "6": 15.264,
      "7": 9.624,
      "8": 40.824,
      "10": 73.344,
      "finish": 42.096
    },
    "15:290": {
      "0": 3.144,
      "1": 11.616,
      "2": 11.544,
      "3": 6.984,
      "4": 16.704,
      "5": 19.296,
      "6": 9.624,
      "7": 12.624,
      "8": 3.264,
      "9": 10.056,
      "10": 7.584,
      "11": 11.904,
      "12": 13.176,
      "finish": 77.424
    },
    "21:0": {
      "0": 3.504,
      "1": 39.336,
      "2": 1.416,
      "finish": 62.976
    },
    "21:226": {
      "0": 2.136,
      "1": 31.224,
      "2": 9.504,
      "3": 40.344,
      "4": 38.736,
      "5": 21.456,
      "6": 45.216,
      "7": 64.656,
      "8": 15.936,
      "9": 51.264,
      "finish": 58.056
    },
    "13:31": {
      "0": 1.704,
      "1": 16.704,
      "2": 34.416,
      "3": 32.424,
      "4": 22.656,
      "5": 3.456,
      "6": 16.056,
      "7": 15.024,
      "8": 21.744,
      "9": 13.296,
      "10": 40.056,
      "finish": 8.496
    },
    "13:54": {
      "0": 3.096,
      "1": 4.824,
      "2": 18.816,
      "3": 3.384,
      "4": 1.296,
      "5": 13.944,
      "6": 21.864,
      "7": 23.376,
      "8": 8.856,
      "9": 21.624,
      "10": 5.256,
      "11": 20.184,
      "12": 2.664,
      "finish": 3.744
    },
    "25:2": {
      "0": 2.784,
      "1": 1.536,
      "2": 10.464,
      "3": 13.416,
      "4": 10.056,
      "5": 23.856,
      "6": 7.656,
      "7": 59.016,
      "8": 23.064,
      "9": 16.104,
      "10": 55.224,
      "finish": 41.304
    },
    "25:17": {
      "0": 5.976,
      "1": 50.856,
      "2": 4.536,
      "3": 43.056,
      "4": 39.984,
      "finish": 14.136
    },
    "26:128": {
      "0": 2.136,
      "1": 47.064,
      "2": 36.696,
      "3": 14.856,
      "4": 14.904,
      "5": 24.384,
      "6": 18.744,
      "7": 15.936,
      "finish": 78.384
    }
  }
}