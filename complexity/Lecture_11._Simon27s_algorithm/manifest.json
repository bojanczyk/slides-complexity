{
  "version": 0.915,
  "presentation": "Lecture 11. Simon's algorithm",
  "slideDict": {
    "1:8": "First_slide",
    "1:15": "testing_n_bits",
    "2:47": "Simon27s_algorithm",
    "10:103": "oracle_separation",
    "8:331": "Simon_overview",
    "2:158": "The_algorithm",
    "2:923": "Hadamard_on_zero_bits",
    "2:1140": "Multiply_vector",
    "11:9": "eerase_rubbish",
    "2:1610": "Hadamard_more_exactly",
    "7:432": "algorithm_test_result",
    "8:406": "sample_from_vector_space",
    "10:16": "recover_from_basis"
  },
  "tree": {
    "type": "child",
    "name": "First slide",
    "id": "1:8",
    "merged": false,
    "children": [
      {
        "type": "show",
        "id": "1:13",
        "name": "The most famous BQP algorithm is Shor’s algorithm: input: a natural number, in binary output: its decomposition into primes",
        "disabled": false,
        "keywords": [
          "The most famous BQP algorithm is Shor’s algorithm: input: a natural number, in binary output: its decomposition into primes"
        ],
        "eventId": "0"
      },
      {
        "type": "child",
        "name": "testing n bits",
        "id": "1:15",
        "children": [
          {
            "type": "show",
            "id": "2:42",
            "name": "So far, we have defined BQP algorithms with yes/no outputs.",
            "disabled": false,
            "keywords": [
              "So far, we have defined BQP algorithms with yes/no outputs."
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "2:43",
            "name": "One can also consider BQP algorithms that output k > 1 bits.",
            "disabled": false,
            "keywords": [
              "One can also consider BQP algorithms that output k > 1 bits."
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "6:4",
            "name": "Suppose that a quantum circuit with n qubits has computed a vector",
            "disabled": false,
            "keywords": [
              "Suppose that a quantum circuit with n qubits has computed a vector"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "6:5",
            "name": "This vector has to be unitary, which means",
            "disabled": false,
            "keywords": [
              "This vector has to be unitary, which means"
            ],
            "eventId": "3"
          },
          {
            "type": "show",
            "id": "6:6",
            "name": "If we test the first k bits, then we get output y ∈ {0,1}k with probability",
            "disabled": false,
            "keywords": [
              "If we test the first k bits, then we get output y ∈ {0,1}k with probability"
            ],
            "eventId": "4"
          },
          {
            "type": "show",
            "id": "2:45",
            "name": "A function f: {0, 1}n ⟶ {0, 1}k is computed by a circuit if for every input w ∈ {0, 1}n , if we run the circuit on [w⟩ and measure the first k bits, then the probability of output f (w) is > 0.6.",
            "disabled": false,
            "keywords": [
              "A function f: {0, 1}n ⟶ {0, 1}k is computed by a circuit if for every input w ∈ {0, 1}n , if we run the circuit on [w⟩ and measure the first k bits, then the probability of output f (w) is > 0.6."
            ],
            "eventId": "5"
          }
        ],
        "keywords": [
          "testing n bits"
        ],
        "eventId": "1"
      },
      {
        "type": "show",
        "id": "1:17",
        "name": "We discuss Simon’s algorithm, an earlier and simpler quantum algorithm.",
        "disabled": false,
        "keywords": [
          "We discuss Simon’s algorithm, an earlier and simpler quantum algorithm."
        ],
        "eventId": "2"
      },
      {
        "type": "child",
        "name": "Simon's algorithm",
        "id": "2:47",
        "children": [
          {
            "type": "show",
            "id": "2:49",
            "name": "input: a classical circuit C which defines a function f : {0, 1}n ⟶ {0, 1}",
            "disabled": false,
            "keywords": [
              "input: a classical circuit C which defines a function f : {0, 1}n ⟶ {0, 1}"
            ],
            "eventId": "0"
          },
          {
            "type": "show",
            "id": "11:311",
            "name": "promise: there is some a ∈ {0, 1}n such that",
            "disabled": false,
            "keywords": [
              "promise: there is some a ∈ {0, 1}n such that"
            ],
            "eventId": "1"
          },
          {
            "type": "show",
            "id": "2:155",
            "name": "output: a",
            "disabled": false,
            "keywords": [
              "output: a"
            ],
            "eventId": "2"
          },
          {
            "type": "show",
            "id": "2:156",
            "name": "Theorem. There is a polynomial quantum algorithm such that if the input function satisfies the promise, then the output of the algorithm is correct, i.e. it is a with probability > 0.6.",
            "disabled": false,
            "keywords": [
              "Theorem. There is a polynomial quantum algorithm such that if the input function satisfies the promise, then the output of the algorithm is correct, i.e. it is a with probability > 0.6."
            ],
            "eventId": "3"
          },
          {
            "type": "child",
            "name": "oracle separation",
            "id": "10:103",
            "children": [
              {
                "type": "show",
                "id": "10:106",
                "name": "If the function f : {0, 1}n ⟶ {0, 1} is given as a black box, then a randomized polynomial time algorithm cannot find two inputs with the same output.",
                "disabled": false,
                "keywords": [
                  "If the function f : {0, 1}n ⟶ {0, 1} is given as a black box, then a randomized polynomial time algorithm cannot find two inputs with the same output."
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "11:312",
                "name": "Intuition: suppose that we have chosen polynomially many, say n5, inputs independently at random. The probability that some two inputs give the same output is at most",
                "disabled": false,
                "keywords": [
                  "Intuition: suppose that we have chosen polynomially many, say n5, inputs independently at random. The probability that some two inputs give the same output is at most"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "11:2",
                "name": "A randomized polynomial algorithm does not need to sample independently, so the real argument is more inolved.",
                "disabled": false,
                "keywords": [
                  "A randomized polynomial algorithm does not need to sample independently, so the real argument is more inolved."
                ],
                "eventId": "2"
              },
              {
                "type": "show",
                "id": "11:8",
                "name": "Nevertheless, using the black box model and Simon’s algorithm one can show for some oracle A.",
                "disabled": false,
                "keywords": [
                  "Nevertheless, using the black box model and Simon’s algorithm one can show for some oracle A.",
                  "BPP ⊊ BQP",
                  "A"
                ],
                "eventId": "3"
              }
            ],
            "keywords": [
              "oracle separation"
            ],
            "eventId": "4"
          },
          {
            "type": "child",
            "name": "Simon overview",
            "id": "8:331",
            "children": [
              {
                "type": "child",
                "name": "The algorithm",
                "id": "2:158",
                "children": [
                  {
                    "type": "show",
                    "id": "11:314",
                    "name": "the input is the circuit padded with some ancillas",
                    "disabled": false,
                    "keywords": [
                      "the input is the circuit padded with some ancillas"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "11:315",
                    "name": "move 2n ancillas to the beginning",
                    "disabled": false,
                    "keywords": [
                      "move 2n ancillas to the beginning"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "2:918",
                    "name": "apply Hadamard to first n bits",
                    "disabled": false,
                    "keywords": [
                      "apply Hadamard to first n bits"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "child",
                    "name": "Hadamard on zero bits",
                    "id": "2:923",
                    "children": [
                      {
                        "type": "show",
                        "id": "11:338",
                        "name": "Hadamard does this",
                        "disabled": false,
                        "keywords": [
                          "Hadamard does this"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "11:339",
                        "name": "If we apply it to a basis vector with only 0 bits:",
                        "disabled": false,
                        "keywords": [
                          "If we apply it to a basis vector with only 0 bits:",
                          "."
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "child",
                        "name": "Multiply vector",
                        "id": "2:1140",
                        "children": [
                          {
                            "type": "show",
                            "id": "2:1252",
                            "name": "Concatenating vectors",
                            "disabled": false,
                            "keywords": [
                              "Concatenating vectors"
                            ],
                            "eventId": "0"
                          },
                          {
                            "type": "show",
                            "id": "11:334",
                            "name": "Consider an n-qubit vector:",
                            "disabled": false,
                            "keywords": [
                              "Consider an n-qubit vector:"
                            ],
                            "eventId": "1"
                          },
                          {
                            "type": "show",
                            "id": "11:335",
                            "name": "And a k-qubit vector:",
                            "disabled": false,
                            "keywords": [
                              "And a k-qubit vector:"
                            ],
                            "eventId": "2"
                          },
                          {
                            "type": "show",
                            "id": "11:336",
                            "name": "Their concatenation is the (n+k)-qubit vector:",
                            "disabled": false,
                            "keywords": [
                              "Their concatenation is the (n+k)-qubit vector:"
                            ],
                            "eventId": "3"
                          },
                          {
                            "type": "show",
                            "id": "11:337",
                            "name": "Concatenation is linear on both coordinates:",
                            "disabled": false,
                            "keywords": [
                              "Concatenation is linear on both coordinates:"
                            ],
                            "eventId": "4"
                          }
                        ],
                        "keywords": [
                          "Multiply vector"
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "11:340",
                        "name": "Then the output is",
                        "disabled": false,
                        "keywords": [
                          "Then the output is"
                        ],
                        "eventId": "3"
                      }
                    ],
                    "keywords": [
                      "Hadamard on zero bits"
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "7:101",
                    "name": "\\frac 1 {\\sqrt 2^{n}} \\sum_{x \\in \\{0,1\\}^n} [x 0^n C \\bar 0\\rangle",
                    "disabled": false,
                    "keywords": [
                      "\\frac 1 {\\sqrt 2^{n}} \\sum_{x \\in \\{0,1\\}^n} [x 0^n C \\bar 0\\rangle"
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "2:919",
                    "name": "compute the value of the circuit and erase the rubbish",
                    "disabled": false,
                    "keywords": [
                      "compute the value of the circuit and erase the rubbish"
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "child",
                    "name": "eerase rubbish",
                    "id": "11:9",
                    "children": [
                      {
                        "type": "show",
                        "id": "11:325",
                        "name": "Consider a function which is computed by a classical circuit with m gates.",
                        "disabled": false,
                        "keywords": [
                          "Consider a function which is computed by a classical circuit with m gates."
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "11:326",
                        "name": "m bits of rubbish, namely the values of all intermiediate gates in the classical circuit.",
                        "disabled": false,
                        "keywords": [
                          "We showed how to simulate it using a quantum circuit:",
                          "m bits of rubbish, namely the values of all intermiediate gates in the classical circuit."
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "11:32",
                        "name": "How do we get rid of the rubbish?",
                        "disabled": false,
                        "keywords": [
                          "How do we get rid of the rubbish?"
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "11:100",
                        "name": "[x 0^\\ell 0^m \\rangle ",
                        "disabled": false,
                        "keywords": [
                          "[x 0^\\ell 0^m \\rangle "
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "11:109",
                        "name": "run the quantum version Q of the circuit",
                        "disabled": false,
                        "keywords": [
                          "run the quantum version Q of the circuit"
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "11:243",
                        "name": "[x 0^\\ell r(x) \\rangle ",
                        "disabled": false,
                        "keywords": [
                          "[x 0^\\ell r(x) \\rangle "
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "11:128",
                        "name": "copy the values of the output gates",
                        "disabled": false,
                        "keywords": [
                          "copy the values of the output gates"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "11:229",
                        "name": "[x f(x) r(x) \\rangle ",
                        "disabled": false,
                        "keywords": [
                          "[x f(x) r(x) \\rangle "
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "11:287",
                        "name": "a",
                        "disabled": false,
                        "keywords": [
                          "a",
                          "b",
                          "b ⊕ a",
                          "CNOT"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "show",
                        "id": "11:181",
                        "name": "run the reverse of Q",
                        "disabled": false,
                        "keywords": [
                          "run the reverse of Q"
                        ],
                        "eventId": "9"
                      },
                      {
                        "type": "show",
                        "id": "11:193",
                        "name": "[x f(x) 0^m \\rangle ",
                        "disabled": false,
                        "keywords": [
                          "[x f(x) 0^m \\rangle "
                        ],
                        "eventId": "10"
                      }
                    ],
                    "keywords": [
                      "eerase rubbish"
                    ],
                    "eventId": "6"
                  },
                  {
                    "type": "show",
                    "id": "7:127",
                    "name": "\\frac 1 {\\sqrt 2^n} \\sum_{x \\in \\{0,1\\}^n}\n [x f(x) C \\bar 0 \\rangle",
                    "disabled": false,
                    "keywords": [
                      "\\frac 1 {\\sqrt 2^n} \\sum_{x \\in \\{0,1\\}^n}\n [x f(x) C \\bar 0 \\rangle"
                    ],
                    "eventId": "7"
                  },
                  {
                    "type": "show",
                    "id": "11:316",
                    "name": "=",
                    "disabled": false,
                    "keywords": [
                      "="
                    ],
                    "eventId": "8"
                  },
                  {
                    "type": "show",
                    "id": "3:227",
                    "name": "apply Hadamard to first n bits",
                    "disabled": false,
                    "keywords": [
                      "apply Hadamard to first n bits"
                    ],
                    "eventId": "9"
                  },
                  {
                    "type": "child",
                    "name": "Hadamard more exactly",
                    "id": "2:1610",
                    "children": [
                      {
                        "type": "show",
                        "id": "2:1869",
                        "name": "Hadamard for nonzero inputs",
                        "disabled": false,
                        "keywords": [
                          "Hadamard for nonzero inputs"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "11:328",
                        "name": "Hadamard does this",
                        "disabled": false,
                        "keywords": [
                          "Hadamard does this"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "11:329",
                        "name": "If we apply it to a basis vector which has some 1 bits:",
                        "disabled": false,
                        "keywords": [
                          "If we apply it to a basis vector which has some 1 bits:",
                          "."
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "11:330",
                        "name": "where is the number of coordinates where both x and y are 1.",
                        "disabled": false,
                        "keywords": [
                          "Then the output is",
                          "where is the number of coordinates where both x and y are 1."
                        ],
                        "eventId": "3"
                      }
                    ],
                    "keywords": [
                      "Hadamard more exactly"
                    ],
                    "eventId": "10"
                  },
                  {
                    "type": "show",
                    "id": "7:1471",
                    "name": "\\frac 1 {2^{n+1}}  \\sum_{\\substack {x \\in \\{0,1\\}\n^n \\\\ y \\in  \\{0,1\\}^n}} ((-1)^{x \\odot y} + (-1)^{(x \\oplus a) \n\\odot y} ) [y f(x) C \\bar 0\\rangle",
                    "disabled": false,
                    "keywords": [
                      "\\frac 1 {2^{n+1}}  \\sum_{\\substack {x \\in \\{0,1\\}\n^n \\\\ y \\in  \\{0,1\\}^n}} ((-1)^{x \\odot y} + (-1)^{(x \\oplus a) \n\\odot y} ) [y f(x) C \\bar 0\\rangle"
                    ],
                    "eventId": "11"
                  },
                  {
                    "type": "show",
                    "id": "11:317",
                    "name": "we get with probability:",
                    "disabled": false,
                    "keywords": [
                      "we get with probability:",
                      "Test the first n bits"
                    ],
                    "eventId": "12"
                  },
                  {
                    "type": "child",
                    "name": "algorithm test result",
                    "id": "7:432",
                    "children": [
                      {
                        "type": "show",
                        "id": "11:318",
                        "name": "Suppose that the vector is",
                        "disabled": false,
                        "keywords": [
                          "Suppose that the vector is"
                        ],
                        "eventId": "0"
                      },
                      {
                        "type": "show",
                        "id": "11:321",
                        "name": "Group 49",
                        "disabled": false,
                        "keywords": [
                          "Group 49"
                        ],
                        "eventId": "1"
                      },
                      {
                        "type": "show",
                        "id": "8:295",
                        "name": "\\alpha_{x,y}",
                        "disabled": false,
                        "keywords": [
                          "\\alpha_{x,y}"
                        ],
                        "eventId": "2"
                      },
                      {
                        "type": "show",
                        "id": "8:251",
                        "name": "= (-1)^{x \\odot y} + (-1)^{x \\odot y + a \\odot y} ",
                        "disabled": false,
                        "keywords": [
                          "= (-1)^{x \\odot y} + (-1)^{x \\odot y + a \\odot y} "
                        ],
                        "eventId": "3"
                      },
                      {
                        "type": "show",
                        "id": "8:274",
                        "name": "= (-1)^{x \\odot y}(1 + (-1)^{a \\odot y} )",
                        "disabled": false,
                        "keywords": [
                          "= (-1)^{x \\odot y}(1 + (-1)^{a \\odot y} )"
                        ],
                        "eventId": "4"
                      },
                      {
                        "type": "show",
                        "id": "8:304",
                        "name": "= \\begin{cases} \n\\pm 2 & \\text{if $a \\odot y$ is even}\\\\\n0 & \\text{otherwise}\n\\end{cases}",
                        "disabled": false,
                        "keywords": [
                          "= \\begin{cases} \n\\pm 2 & \\text{if $a \\odot y$ is even}\\\\\n0 & \\text{otherwise}\n\\end{cases}"
                        ],
                        "eventId": "5"
                      },
                      {
                        "type": "show",
                        "id": "11:322",
                        "name": "If we test the first n bits, then the probability of output is:",
                        "disabled": false,
                        "keywords": [
                          "If we test the first n bits, then the probability of output is:"
                        ],
                        "eventId": "6"
                      },
                      {
                        "type": "show",
                        "id": "11:323",
                        "name": "If then this coefficient is",
                        "disabled": false,
                        "keywords": [
                          "If then this coefficient is"
                        ],
                        "eventId": "7"
                      },
                      {
                        "type": "show",
                        "id": "7:1001",
                        "name": "= \\frac {2p_{x,y}} {2^{n+1}}\n",
                        "disabled": false,
                        "keywords": [
                          "= \\frac {2p_{x,y}} {2^{n+1}}\n"
                        ],
                        "eventId": "8"
                      },
                      {
                        "type": "show",
                        "id": "7:1315",
                        "name": "= \\begin{cases}\n \\pm \\frac 1 \n{2^{n-1}} & \\text{if $y \\odot a$ is even}\\\\\n0 & \\text{otherwise}\n\\end{cases}\n",
                        "disabled": false,
                        "keywords": [
                          "= \\begin{cases}\n \\pm \\frac 1 \n{2^{n-1}} & \\text{if $y \\odot a$ is even}\\\\\n0 & \\text{otherwise}\n\\end{cases}\n"
                        ],
                        "eventId": "9"
                      },
                      {
                        "type": "show",
                        "id": "11:324",
                        "name": "Hence the probability is",
                        "disabled": false,
                        "keywords": [
                          "Hence the probability is"
                        ],
                        "eventId": "10"
                      },
                      {
                        "type": "show",
                        "id": "7:1440",
                        "name": "= \\begin{cases}\n \\frac{1}{2^{n-1}} &\n\\text{if  $y \\odot a$ is even} \\\\\n0 & \\text{otherwise} \n\\end{cases}",
                        "disabled": false,
                        "keywords": [
                          "= \\begin{cases}\n \\frac{1}{2^{n-1}} &\n\\text{if  $y \\odot a$ is even} \\\\\n0 & \\text{otherwise} \n\\end{cases}"
                        ],
                        "eventId": "11"
                      }
                    ],
                    "keywords": [
                      "algorithm test result"
                    ],
                    "eventId": "13"
                  },
                  {
                    "type": "show",
                    "id": "7:1150",
                    "name": "\\begin{cases}\n \\frac{1}{2^{n-1}} &\n\\text{if  $y \\odot a$ is even} \\\\\n0 & \\text{otherwise} \n\\end{cases}",
                    "disabled": false,
                    "keywords": [
                      "\\begin{cases}\n \\frac{1}{2^{n-1}} &\n\\text{if  $y \\odot a$ is even} \\\\\n0 & \\text{otherwise} \n\\end{cases}"
                    ],
                    "eventId": "14"
                  }
                ],
                "keywords": [
                  "The algorithm"
                ],
                "eventId": "0"
              },
              {
                "type": "show",
                "id": "11:313",
                "name": "Using this circuit, we can sample uniformly at random from the set",
                "disabled": false,
                "keywords": [
                  "Using this circuit, we can sample uniformly at random from the set"
                ],
                "eventId": "1"
              },
              {
                "type": "show",
                "id": "8:405",
                "name": "This set is a vector space of dimension n – 1, and hence doing O(n) samples gives a basis with probability > 0.6.",
                "disabled": false,
                "keywords": [
                  "This set is a vector space of dimension n – 1, and hence doing O(n) samples gives a basis with probability > 0.6."
                ],
                "eventId": "2"
              },
              {
                "type": "child",
                "name": "sample from vector space",
                "id": "8:406",
                "children": [
                  {
                    "type": "show",
                    "id": "10:0",
                    "name": "We sample vectors from the vector space 2n.",
                    "disabled": false,
                    "keywords": [
                      "We sample vectors from the vector space 2n."
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "10:10",
                    "name": "What is the expected number of samples needed to get n independent vectors?",
                    "disabled": false,
                    "keywords": [
                      "What is the expected number of samples needed to get n independent vectors?"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "10:11",
                    "name": "If we the already sampled vectors span a proper subspace of 2n, then the probability of sampling a new vector which increases the subspace is ≥ ½.",
                    "disabled": false,
                    "keywords": [
                      "If we the already sampled vectors span a proper subspace of 2n, then the probability of sampling a new vector which increases the subspace is ≥ ½."
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "8:431",
                    "name": "The expected number of samples needed to increase the spanned subspace is ≤ 2.",
                    "disabled": false,
                    "keywords": [
                      "The expected number of samples needed to increase the spanned subspace is ≤ 2."
                    ],
                    "eventId": "3"
                  },
                  {
                    "type": "show",
                    "id": "10:13",
                    "name": "The expected number of samples needed to span the entire space is ≤ 2n.",
                    "disabled": false,
                    "keywords": [
                      "The expected number of samples needed to span the entire space is ≤ 2n."
                    ],
                    "eventId": "4"
                  },
                  {
                    "type": "show",
                    "id": "10:14",
                    "name": "If we sample 6n vectors, then we span the entire space with probability > 0.6.",
                    "disabled": false,
                    "keywords": [
                      "If we sample 6n vectors, then we span the entire space with probability > 0.6."
                    ],
                    "eventId": "5"
                  },
                  {
                    "type": "show",
                    "id": "10:15",
                    "name": "otherwise the expected number would be at least 0.4 × 6n > 2n",
                    "disabled": false,
                    "keywords": [
                      "otherwise the expected number would be at least 0.4 × 6n > 2n"
                    ],
                    "eventId": "6"
                  }
                ],
                "keywords": [
                  "sample from vector space"
                ],
                "eventId": "3"
              },
              {
                "type": "show",
                "id": "8:408",
                "name": "Using the basis, we can recover a in polynomial time.",
                "disabled": false,
                "keywords": [
                  "Using the basis, we can recover a in polynomial time."
                ],
                "eventId": "4"
              },
              {
                "type": "child",
                "name": "recover from basis",
                "id": "10:16",
                "children": [
                  {
                    "type": "show",
                    "id": "11:333",
                    "name": "Suppose that we have a basis for the set",
                    "disabled": false,
                    "keywords": [
                      "Suppose that we have a basis for the set"
                    ],
                    "eventId": "0"
                  },
                  {
                    "type": "show",
                    "id": "11:332",
                    "name": "For i ∈ {1, ..., n}, consider the vector",
                    "disabled": false,
                    "keywords": [
                      "For i ∈ {1, ..., n}, consider the vector",
                      "0000100000",
                      "the i-th bit is 1, otherwise 0"
                    ],
                    "eventId": "1"
                  },
                  {
                    "type": "show",
                    "id": "11:331",
                    "name": "This vector belongs to Y if and only if the i-th bit of a is 0.",
                    "disabled": false,
                    "keywords": [
                      "This vector belongs to Y if and only if the i-th bit of a is 0.",
                      "can be checked in polynomial time using Gaussian elimination"
                    ],
                    "eventId": "2"
                  },
                  {
                    "type": "show",
                    "id": "10:100",
                    "name": "Hence we can compute a in polynomial time.",
                    "disabled": false,
                    "keywords": [
                      "Hence we can compute a in polynomial time."
                    ],
                    "eventId": "3"
                  }
                ],
                "keywords": [
                  "recover from basis"
                ],
                "eventId": "5"
              },
              {
                "type": "show",
                "id": "10:101",
                "name": "This description of Simon’s algorithm runs a quantum circuit O(n) times, and does some post-computation on the tested results. We can however put all of this into a single execution of the quantum circuit, with a single test at the end.",
                "disabled": false,
                "keywords": [
                  "This description of Simon’s algorithm runs a quantum circuit O(n) times, and does some post-computation on the tested results. We can however put all of this into a single execution of the quantum circuit, with a single test at the end."
                ],
                "eventId": "6"
              }
            ],
            "keywords": [
              "Simon overview"
            ],
            "eventId": "5"
          }
        ],
        "keywords": [
          "Simon's algorithm"
        ],
        "eventId": "3"
      }
    ],
    "keywords": [
      "Computational Complexity",
      "Lecture 1. Turing machines and their resources",
      "First slide"
    ],
    "eventId": "root"
  },
  "soundDict": {
    "1:8": {
      "0": 7.224,
      "1": 38.304,
      "2": 33.024,
      "3": 7.536,
      "finish": 15.936
    },
    "1:15": {
      "0": 1.776,
      "1": 10.536,
      "2": 3.096,
      "3": 25.344,
      "4": 29.856,
      "5": 33.696,
      "finish": 30.936
    },
    "2:47": {
      "0": 4.584,
      "1": 21.816,
      "2": 55.776,
      "3": 7.584,
      "4": 44.496,
      "5": 9.456,
      "finish": 21.864
    },
    "10:103": {
      "0": 17.736,
      "1": 33.744,
      "2": 45.816,
      "3": 17.856,
      "finish": 64.776
    },
    "8:331": {
      "0": 17.256,
      "1": 5.496,
      "2": 30.264,
      "3": 32.616,
      "4": 15.504,
      "5": 9.024,
      "6": 18.216,
      "finish": 78.096
    },
    "2:158": {
      "0": 2.784,
      "1": 14.064,
      "2": 12.696,
      "3": 8.304,
      "4": 4.344,
      "5": 26.304,
      "6": 15.216,
      "7": 4.464,
      "8": 42.864,
      "9": 53.736,
      "10": 25.104,
      "11": 2.904,
      "12": 47.904,
      "13": 14.544,
      "14": 5.376,
      "finish": 16.056
    },
    "2:923": {
      "0": 3.336,
      "1": 24.264,
      "2": 26.496,
      "3": 17.736,
      "finish": 36.816
    },
    "2:1140": {
      "0": 4.536,
      "1": 2.736,
      "2": 6.984,
      "3": 10.344,
      "4": 12.456,
      "finish": 39.336
    },
    "11:9": {
      "0": 1.776,
      "1": 15.384,
      "2": 49.584,
      "3": 8.904,
      "4": 5.976,
      "5": 11.016,
      "6": 5.784,
      "7": 2.064,
      "8": 2.664,
      "9": 21.984,
      "10": 26.976,
      "finish": 8.496
    },
    "2:1610": {
      "0": 1.584,
      "1": 0.936,
      "2": 3.264,
      "3": 67.296,
      "finish": 52.824
    },
    "7:432": {
      "0": 1.416,
      "1": 17.064,
      "2": 6.504,
      "3": 2.664,
      "4": 12.456,
      "5": 46.056,
      "6": 14.664,
      "7": 113.976,
      "8": 55.944,
      "9": 8.616,
      "10": 28.296,
      "11": 22.584,
      "finish": 40.896
    },
    "8:406": {
      "0": 3.456,
      "1": 9.024,
      "2": 16.464,
      "3": 40.656,
      "4": 34.224,
      "5": 20.136,
      "6": 15.864,
      "finish": 25.056
    },
    "10:16": {
      "0": 1.776,
      "1": 10.416,
      "2": 10.416,
      "3": 62.304,
      "finish": 3.384
    }
  }
}