{
  "presentation": "Lecture 7. Randomised algorithms 2",
  "slideDict": {
    "1:10": "First_slide",
    "1:176": "Derandomisation",
    "1:251": "exptected_size",
    "1:245": "Two_ways_of_derandomising",
    "3:0": "Tree_of_tosses",
    "3:76": "Pairwise_independent",
    "9:0": "Adleman_1",
    "10:34": "Adleman_2",
    "10:62": "Adleman_3",
    "10:187": "Adleman_4",
    "17:0": "BPP_3D_P",
    "17:5": "Pseudorandom_generator",
    "17:29": "Apply_pseudo-random"
  },
  "soundDict": {
    "1:10": {
      "0": {
        "file": "0",
        "duration": 6.336
      },
      "1": {
        "file": "1",
        "duration": 22.416
      },
      "2": {
        "file": "2",
        "duration": 15.696
      },
      "3": {
        "file": "3",
        "duration": 10.416
      },
      "4": {
        "file": "4",
        "duration": 33.264
      },
      "5": {
        "file": "5",
        "duration": 19.704
      },
      "6": {
        "file": "6",
        "duration": 3.024
      }
    },
    "9:0": {
      "0": {
        "file": "0",
        "duration": 0.384
      },
      "1": {
        "file": "1",
        "duration": 9.936
      },
      "2": {
        "file": "2",
        "duration": 89.016
      },
      "3": {
        "file": "3",
        "duration": 21.336
      },
      "4": {
        "file": "4",
        "duration": 15.936
      },
      "5": {
        "file": "5",
        "duration": 30.096
      },
      "6": {
        "file": "6",
        "duration": 19.656
      },
      "7": {
        "file": "7",
        "duration": 3.936
      },
      "8": {
        "file": "8",
        "duration": 1.224
      }
    },
    "10:34": {
      "0": {
        "file": "0",
        "duration": 1.584
      },
      "1": {
        "file": "1",
        "duration": 21.624
      },
      "2": {
        "file": "2",
        "duration": 32.904
      },
      "3": {
        "file": "3",
        "duration": 7.656
      },
      "4": {
        "file": "4",
        "duration": 25.416
      },
      "5": {
        "file": "5",
        "duration": 6.936
      },
      "6": {
        "file": "6",
        "duration": 57.984
      },
      "7": {
        "file": "7",
        "duration": 12.144
      },
      "8": {
        "file": "8",
        "duration": 47.544
      },
      "9": {
        "file": "9",
        "duration": 0.936
      }
    },
    "10:62": {
      "0": {
        "file": "0",
        "duration": 1.824
      },
      "1": {
        "file": "1",
        "duration": 32.784
      },
      "2": {
        "file": "2",
        "duration": 22.584
      },
      "3": {
        "file": "3",
        "duration": 32.256
      }
    },
    "10:187": {
      "0": {
        "file": "0",
        "duration": 1.344
      },
      "1": {
        "file": "1",
        "duration": 5.256
      },
      "2": {
        "file": "2",
        "duration": 1.104
      }
    },
    "17:0": {
      "0": {
        "file": "0",
        "duration": 0.864
      },
      "1": {
        "file": "1",
        "duration": 21.216
      },
      "2": {
        "file": "2",
        "duration": 15.384
      },
      "3": {
        "file": "3",
        "duration": 50.016
      },
      "4": {
        "file": "4",
        "duration": 73.296
      },
      "5": {
        "file": "5",
        "duration": 8.304
      },
      "6": {
        "file": "6",
        "duration": 52.464
      },
      "7": {
        "file": "7",
        "duration": 41.136
      }
    },
    "17:5": {
      "0": {
        "file": "0",
        "duration": 5.904
      },
      "1": {
        "file": "1",
        "duration": 3.024
      },
      "2": {
        "file": "2",
        "duration": 2.856
      },
      "3": {
        "file": "3",
        "duration": 16.944
      },
      "4": {
        "file": "4",
        "duration": 14.616
      },
      "5": {
        "file": "5",
        "duration": 4.536
      },
      "6": {
        "file": "6",
        "duration": 11.376
      },
      "7": {
        "file": "7",
        "duration": 38.616
      },
      "8": {
        "file": "8",
        "duration": 5.184
      },
      "9": {
        "file": "9",
        "duration": 86.784
      },
      "10": {
        "file": "10",
        "duration": 49.104
      },
      "11": {
        "file": "11",
        "duration": 47.376
      }
    },
    "17:29": {
      "0": {
        "file": "0",
        "duration": 1.344
      },
      "1": {
        "file": "1",
        "duration": 22.416
      },
      "2": {
        "file": "2",
        "duration": 42.504
      },
      "3": {
        "file": "3",
        "duration": 50.424
      },
      "4": {
        "file": "4",
        "duration": 11.784
      },
      "5": {
        "file": "5",
        "duration": 12.576
      }
    },
    "1:176": {
      "0": {
        "file": "0",
        "duration": 1.896
      },
      "1": {
        "file": "1",
        "duration": 31.656
      },
      "2": {
        "file": "2",
        "duration": 19.224
      },
      "3": {
        "file": "3",
        "duration": 34.896
      },
      "4": {
        "file": "4",
        "duration": 29.616
      },
      "5": {
        "file": "5",
        "duration": 61.464
      },
      "6": {
        "file": "6",
        "duration": 29.184
      },
      "7": {
        "file": "7",
        "duration": 8.784
      }
    },
    "1:251": {
      "0": {
        "file": "0",
        "duration": 14.856
      },
      "1": {
        "file": "1",
        "duration": 11.424
      },
      "2": {
        "file": "2",
        "duration": 20.856
      },
      "3": {
        "file": "3",
        "duration": 2.664
      },
      "4": {
        "file": "4",
        "duration": 33.384
      },
      "5": {
        "file": "5",
        "duration": 11.184
      },
      "6": {
        "file": "6",
        "duration": 12.144
      },
      "7": {
        "file": "7",
        "duration": 1.296
      },
      "8": {
        "file": "8",
        "duration": 14.256
      },
      "9": {
        "file": "9",
        "duration": 12.504
      },
      "10": {
        "file": "10",
        "duration": 43.584
      },
      "11": {
        "file": "11",
        "duration": 48.624
      }
    },
    "1:245": {
      "0": {
        "file": "0",
        "duration": 31.344
      },
      "1": {
        "file": "1",
        "duration": 4.584
      },
      "2": {
        "file": "2",
        "duration": 24.984
      },
      "3": {
        "file": "3",
        "duration": 8.016
      },
      "4": {
        "file": "4",
        "duration": 18.696
      },
      "5": {
        "file": "5",
        "duration": 17.064
      },
      "6": {
        "file": "6",
        "duration": 15.984
      }
    },
    "3:0": {
      "0": {
        "file": "0",
        "duration": 1.656
      },
      "1": {
        "file": "1",
        "duration": 47.016
      },
      "2": {
        "file": "2",
        "duration": 20.304
      },
      "3": {
        "file": "3",
        "duration": 20.976
      },
      "4": {
        "file": "4",
        "duration": 34.944
      },
      "5": {
        "file": "5",
        "duration": 36.816
      },
      "6": {
        "file": "6",
        "duration": 4.296
      },
      "7": {
        "file": "7",
        "duration": 22.104
      },
      "8": {
        "file": "8",
        "duration": 39.096
      },
      "9": {
        "file": "9",
        "duration": 70.104
      }
    },
    "3:76": {
      "0": {
        "file": "0",
        "duration": 2.424
      },
      "1": {
        "file": "1",
        "duration": 7.824
      },
      "2": {
        "file": "2",
        "duration": 6.504
      },
      "3": {
        "file": "3",
        "duration": 5.016
      },
      "4": {
        "file": "4",
        "duration": 31.896
      },
      "5": {
        "file": "5",
        "duration": 13.656
      },
      "6": {
        "file": "6",
        "duration": 44.856
      },
      "7": {
        "file": "7",
        "duration": 34.896
      },
      "8": {
        "file": "8",
        "duration": 8.616
      },
      "9": {
        "file": "9",
        "duration": 20.136
      },
      "10": {
        "file": "10",
        "duration": 29.256
      },
      "11": {
        "file": "11",
        "duration": 17.424
      },
      "12": {
        "file": "12",
        "duration": 73.704
      },
      "13": {
        "file": "13",
        "duration": 46.464
      }
    }
  },
  "tree": {
    "type": "child",
    "name": "First slide",
    "id": "1:10",
    "children": [
      {
        "type": "show",
        "id": "17:58",
        "name": "BPP ⊊ P/Poly",
        "disabled": false
      },
      {
        "type": "show",
        "id": "17:59",
        "name": "If pseudo-random generators exist, then BPP = P",
        "disabled": false
      },
      {
        "type": "show",
        "id": "17:60",
        "name": "Derandomisation techniques",
        "disabled": false
      },
      {
        "type": "child",
        "name": "Adleman 1",
        "id": "9:0",
        "children": [
          {
            "type": "show",
            "id": "9:2",
            "name": "Theorem. Adleman 1978 BPP ⊆ P/poly",
            "disabled": false
          },
          {
            "type": "show",
            "id": "40:7",
            "name": "BPP definition",
            "disabled": false
          },
          {
            "type": "show",
            "id": "9:5",
            "name": "P/poly = a polynomial time algorithm, which is allowed an advice string for every input length.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "9:3",
            "name": "equivalent to (nonuniform) circuits of polynomial size",
            "disabled": false
          },
          {
            "type": "show",
            "id": "10:181",
            "name": "In a BPP algorithm, we can make the probability of error exponentially small, while preserving polynomial running time (and coin tosses).",
            "disabled": false
          },
          {
            "type": "show",
            "id": "10:182",
            "name": "For small enough error probability, there will be a sequence of coin tosses which gives a right answer of all inputs of length n.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "10:185",
            "name": "advice string",
            "disabled": false
          },
          {
            "type": "child",
            "name": "Adleman 2",
            "id": "10:34",
            "children": [
              {
                "type": "show",
                "id": "10:186",
                "name": "For input of length n, run the original algorithm m times and take a majority vote.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "10:192",
                "name": "all such sequences of coin tosses",
                "disabled": false
              },
              {
                "type": "show",
                "id": "10:195",
                "name": "all such sequences of coin tosses",
                "disabled": false
              },
              {
                "type": "show",
                "id": "10:193",
                "name": "coin tosses that lead to a wrong answer when the input is w",
                "disabled": false
              },
              {
                "type": "show",
                "id": "10:194",
                "name": "coin tosses that lead to a wrong answer when the input is v",
                "disabled": false
              },
              {
                "type": "show",
                "id": "10:60",
                "name": "and therefore the sum of balls cannot cover the whole space.",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Adleman 3",
                "id": "10:62",
                "children": [
                  {
                    "type": "show",
                    "id": "10:178",
                    "name": "When discussing amplification of error for BPP, we showed that if the algorithm makes an error with probability p < 0.5, then running it m times and taking a majority vote gives an error with probability",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "10:179",
                    "name": "If we choose",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "10:180",
                    "name": "Then the error probability drops to <",
                    "disabled": false
                  }
                ]
              },
              {
                "type": "show",
                "id": "10:61",
                "name": "Conclusion. There is a constant c such for every n, there exists a sequence of cn coin tosses which gives a correct answer for all inputs of length n, under the algorithm “run the orignal algorithm cn times, and take a majority vote”.",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Adleman 4",
                "id": "10:187",
                "children": [
                  {
                    "type": "show",
                    "id": "10:189",
                    "name": "For inputs of length, the advice string is this sequence of coin tosses.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "10:190",
                    "name": "Using this advice string instead of coin tosses, we are guaranteed to get a correct answer for all inputs of length n.",
                    "disabled": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "child",
        "name": "BPP = P",
        "id": "17:0",
        "children": [
          {
            "type": "show",
            "id": "17:4",
            "name": "Theorem. If a pseudo-random generator G exists, then BPP = P.",
            "disabled": false
          },
          {
            "type": "child",
            "name": "Pseudorandom generator",
            "id": "17:5",
            "children": [
              {
                "type": "show",
                "id": "17:51",
                "name": "Pseudo-random generator",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:7",
                "name": "Suppose that there is a function G which:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:8",
                "name": "inputs: a number n and a seed of log(n) bits",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:9",
                "name": "outputs: n bits",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:10",
                "name": "with the following properties",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:11",
                "name": "1. the running time is polynomial in n",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:12",
                "name": "2. if n is large enough, and D is a circuit of size n3, then following probabilities differ by < 0.1:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:53",
                "name": "Probability[D accepts G(s)]",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:54",
                "name": "Probability[D accepts r]",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:52",
                "name": "this polynomial could be > n3",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:50",
                "name": "The same results would be obtained with: - n100 instead of n3, and - 0.4999 instead of 0.1.",
                "disabled": false
              }
            ]
          },
          {
            "type": "show",
            "id": "17:22",
            "name": "Proof. Consider a language L ∈ BPP, as witnessed by a machine M such that: - the running time is a polynomial p(n) - inputs w ∈ L accepted with probability > 0.7 - inputs w ∉ L are accepted with probability < 0.3",
            "disabled": false
          },
          {
            "type": "show",
            "id": "17:39",
            "name": "Polynomial time algorithm for L: Given an input w of length n, enumerate through all seeds s of length log(p(n)), and check which ones satisfy",
            "disabled": false
          },
          {
            "type": "show",
            "id": "17:41",
            "name": "(*) M accepts w using random bits G(s)",
            "disabled": false
          },
          {
            "type": "show",
            "id": "17:42",
            "name": "Claim. For large enough n: - if w ∈ L, then > 0.6 of seeds will satisfy (*) - if w ∉ L, then < 0.4 of seeds will satisfy (*)",
            "disabled": false
          },
          {
            "type": "child",
            "name": "Apply pseudo-random",
            "id": "17:29",
            "children": [
              {
                "type": "show",
                "id": "17:56",
                "name": "For an input word w of length n, consider the following function D:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:27",
                "name": "This function is computed by a circuit of size quadratic in p(n)",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:57",
                "name": "By assumption on G, if n is large enough, then following differ by < 0.1",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:44",
                "name": "> 0.7 for w ∈ L < 0.3 for w ∉ L",
                "disabled": false
              },
              {
                "type": "show",
                "id": "17:45",
                "name": "> 0.6 for w ∈ L < 0.4 for w ∉ L",
                "disabled": false
              }
            ]
          }
        ]
      },
      {
        "type": "child",
        "name": "Derandomisation",
        "id": "1:176",
        "children": [
          {
            "type": "show",
            "id": "6:4",
            "name": "Given a graph, find a cut of maximal size?",
            "disabled": false
          },
          {
            "type": "show",
            "id": "1:179",
            "name": "The following problem is NP-complete: given a graph and k, decide is there a cut of size ≥ k.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "6:5",
            "name": "Randomised approximation algorithm",
            "disabled": false
          },
          {
            "type": "show",
            "id": "1:241",
            "name": "Choose the partition randomly For each vertex, independently flip a coin to decide which part of the partition contains it.",
            "disabled": false
          },
          {
            "type": "show",
            "id": "1:242",
            "name": "With probability 1/2, an edge is counted to the size of the cut. Hence, the expected value of “size of the cut” is 1/2 over the number of edges.",
            "disabled": false
          },
          {
            "type": "child",
            "name": "exptected size",
            "id": "1:251",
            "children": [
              {
                "type": "show",
                "id": "6:6",
                "name": "What is the probability of getting a cut of size ≥ m?",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:184",
                "name": "expected size",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:912",
                "name": "≤",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:7",
                "name": "expected size",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:982",
                "name": "(m-1) \\cdot (1 - \\text{probability}[\\text{cut has size\n  $\\ge m$}]) + \n|E| \\cdot \\text{probability}[\\text{cut has size  $ \\ge m$}] =\n",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:1100",
                "name": "(m-1) + (|E| - m +1) \\cdot \\text{probability}\n[\\text{cut has size  $ \\ge m$}] \n",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:1143",
                "name": "Summing up:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "40:612",
                "name": "\\frac {|E|} 2 \\quad \\le \\quad  (m-1) + (|E| - m +1) \\cdot \\text{probability}[\\text{cut has size  $ \\ge m$}] \n",
                "disabled": false
              },
              {
                "type": "show",
                "id": "2:1818",
                "name": "\\frac { \\frac{|E|} 2 - m +1 }\n{|E| - m +1} \\quad \\le \\quad   \\text{probability}[\\text{cut has size  $ \\ge m$}] \n",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:23",
                "name": "For m = half the edges, we get:",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:24",
                "name": "if we try m times, we get probability > ½ , because",
                "disabled": false
              }
            ]
          },
          {
            "type": "child",
            "name": "Two ways of derandomising",
            "id": "1:245",
            "children": [
              {
                "type": "show",
                "id": "1:247",
                "name": "We derandomise this algorithm, getting a deterministic polynomial time algorithm, which always produces a partition that cuts ≥ half the edges.",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:0",
                "name": "Result: a deterministic, polynomial time, approximation algorithm for max-cut, with approximation factor 2",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:2",
                "name": "Method 1. Conditional expectation",
                "disabled": false
              },
              {
                "type": "show",
                "id": "6:3",
                "name": "Method 2. Pairwise independent variables",
                "disabled": false
              },
              {
                "type": "child",
                "name": "Tree of tosses",
                "id": "3:0",
                "children": [
                  {
                    "type": "show",
                    "id": "6:25",
                    "name": "ε",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "3:60",
                    "name": "What is the expected value for the cut size, in a vertex of this tree?",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "3:61",
                    "name": "Probability ranges over coins that have not been tossed yet",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:29",
                    "name": "Group 7",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:28",
                    "name": "A. edge that will surely be cut",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:27",
                    "name": "B. edge that will surely not be cut",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:26",
                    "name": "C. edge that may or may not be cut",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "3:74",
                    "name": "number of edges of type A + half of number of edges of type C",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "3:73",
                    "name": "Algorithm: start in the root, and each time move to a child with best expected value.",
                    "disabled": false
                  }
                ]
              },
              {
                "type": "child",
                "name": "Pairwise independent",
                "id": "3:76",
                "children": [
                  {
                    "type": "show",
                    "id": "5:0",
                    "name": "The expected value of half the edges was because for every edge e:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:2",
                    "name": "Probability [exactly one endpoint of e is chosen] = ½",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:3",
                    "name": "Hence, each edge corresponds ½ to the expected cut size.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:4",
                    "name": "E(X+Y) = EX + EY",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:5",
                    "name": "even when X and Y are not independent",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:31",
                    "name": "Randomised algorithm that uses log n bits",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:23",
                    "name": "and hence can be derandomised using brute force",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:7",
                    "name": "Represent each vertex v as a sequence of log n bits.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:8",
                    "name": "Toss a coin log n times, giving another bit sequence r.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:32",
                    "name": "The cut is chosen as follows:",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:14",
                    "name": "For every 2 different vertices, the two corresponding events are independent.",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "6:30",
                    "name": "0",
                    "disabled": false
                  },
                  {
                    "type": "show",
                    "id": "5:15",
                    "name": "(but not for 3 vertices)",
                    "disabled": false
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "version": 0.81
}