{"name":"Sipser","id":"72:38","events":[{"type":"show","id":"51:48","name":"Slogan. We can make sure that a Turing machine always halts on inputs where finite memory is used.","disabled":false},{"type":"show","id":"51:368","name":"Simple implementation. We can store the entire list of configurations seen so far, and always check if there is a repetition.","disabled":false},{"type":"show","id":"51:371","name":"However, this can also be done without any extra memory cells.","disabled":false},{"type":"show","id":"51:34","name":"Theorem (Sipser). For every deterministic Turing machine M, there is a deterministic Turing machine N such that for every input word:","disabled":false},{"type":"show","id":"51:39","name":"1. M accepts if and only if N accepts","disabled":false},{"type":"show","id":"51:291","name":"2. if M uses n < âˆž memory cells, then N halts and also uses n cells.","disabled":false},{"type":"show","id":"51:367","name":"Proof.","disabled":false},{"type":"show","id":"51:364","name":"Step 1. Compute the memory needed","disabled":false},{"type":"show","id":"51:365","name":"Step 2. Search all configurations","disabled":false},{"type":"child","id":"72:42","name":"Compute the space","disabled":false},{"type":"child","id":"72:39","name":"Sipser Search","disabled":false}]}